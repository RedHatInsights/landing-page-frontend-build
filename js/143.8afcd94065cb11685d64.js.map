{"version":3,"sources":["webpack://landing-page-frontend/./src/routes/404.js"],"names":["NotFound","className","Title","headingLevel","size","Button","variant","component","href","window","location","origin","pathname","split","propTypes","technologies","PropTypes","url","title","history","push","defaultProps","connect","activeTechnologies","filter","disabled"],"mappings":"uOAaMA,G,SAAW,kBACf,6BAASC,UAAU,mEACjB,kBAAC,EAAAC,MAAD,CAAOC,aAAa,KAAKC,KAAK,OAA9B,kCAGA,kBAAC,IAAD,MACA,kBAAC,EAAAF,MAAD,CAAOC,aAAa,KAAKF,UAAU,qBAAnC,6GAIA,kBAAC,EAAAI,OAAD,CACEC,QAAQ,OACRC,UAAU,IACVC,KAAI,UAAKC,OAAOC,SAASC,QAArB,OAhB0C,SAA3CF,OAAOC,SAASE,SAASC,MAAM,KAAK,GAAgB,QAAU,KAanE,yBAUJb,EAASc,UAAY,CACnBC,aAAcC,YACZA,UAAgB,CACdC,IAAKD,WACLE,MAAOF,cAGXG,QAASH,UAAgB,CACvBI,KAAMJ,YAIVhB,EAASqB,aAAe,CACtBN,aAAc,GACdI,QAAS,CACPC,KAAM,eAcV,SAAeE,cAVf,WAEE,6DADmB,CAAEP,aAAc,CAAEQ,mBAAoB,KAAvDR,EACF,EADEA,aAEF,MAAO,CACLA,aACEA,GACAA,EAAaQ,mBAAmBC,QAAO,qBAAGC,eAIhD,CAAwCzB","file":"js/143.8afcd94065cb11685d64.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Title } from '@patternfly/react-core';\nimport Icon404 from '../components/icon-404';\nimport { connect } from 'react-redux';\n\nimport './404.scss';\n\n// Chrome is not on this page, so do the isBeta here\nconst isBeta = () => {\n  return window.location.pathname.split('/')[1] === 'beta' ? '/beta' : '';\n};\n\nconst NotFound = () => (\n  <section className=\"pf-l-page__main-section pf-c-page__main-section ins-c-page__404\">\n    <Title headingLevel=\"h1\" size=\"3xl\">\n      404: It&apos;s true. We&apos;ve lost it.\n    </Title>\n    <Icon404 />\n    <Title headingLevel=\"h2\" className=\"ins-c-text__sorry\">\n      Sorry, we couldn&apos;t find what you were looking for. The page you\n      requested may have been changed or moved.\n    </Title>\n    <Button\n      variant=\"link\"\n      component=\"a\"\n      href={`${window.location.origin}${isBeta()}`}\n    >\n      Return to homepage\n    </Button>\n  </section>\n);\n\nNotFound.propTypes = {\n  technologies: PropTypes.arrayOf(\n    PropTypes.shape({\n      url: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n};\n\nNotFound.defaultProps = {\n  technologies: [],\n  history: {\n    push: () => undefined,\n  },\n};\n\nfunction mapStateToProps(\n  { technologies } = { technologies: { activeTechnologies: [] } }\n) {\n  return {\n    technologies:\n      technologies &&\n      technologies.activeTechnologies.filter(({ disabled }) => !disabled),\n  };\n}\n\nexport default connect(mapStateToProps)(NotFound);\n"],"sourceRoot":""}