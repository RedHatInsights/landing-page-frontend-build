{"version":3,"sources":["webpack://landing-page-frontend/./src/routes/Logout.scss","webpack://landing-page-frontend/./src/routes/Logout.js","webpack://landing-page-frontend/./src/routes/Logout.scss?9cab"],"names":["___CSS_LOADER_EXPORT___","push","module","id","className","Title","headingLevel","size","Button","variant","onClick","window","location","href","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"+LAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,kOAAmO,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,qCAAqC,8GAA8G,MAAQ,GAAG,SAAW,gIAAgI,eAAiB,CAAC,mUAAmU,25EAA25E,WAAa,MAE70G,W,0FCeA,QAbe,WACb,OACE,6BAASC,UAAU,sEACjB,kBAAC,EAAAC,MAAD,CAAOC,aAAa,KAAKC,KAAK,OAA9B,wBAGA,kBAAC,EAAAC,OAAD,CAAQC,QAAQ,OAAOC,QAAS,iBAAoB,QATxDC,OAAOC,SAASC,KAAhB,YASwD,OAApD,mB,gECPFC,EAAS,IAAI,UALH,CAEd,OAAiB,OACjB,WAAoB,IAMlB,IAAK,kBAAkBZ,EAAOa,IAAIC,WAAY,CAC5C,IA+BIC,EAAY,iBAEhBf,EAAOa,IAAIG,OACT,OACA,eAnCkB,SAAuBC,EAAGC,EAAGC,GACnD,IAAKF,GAAKC,GAAKD,IAAMC,EACnB,OAAO,EAGT,IAAIE,EAEJ,IAAKA,KAAKH,EACR,GAKIA,EAAEG,KAAOF,EAAEE,GACb,OAAO,EAIX,IAAKA,KAAKF,EACR,IAKKD,EAAEG,GACL,OAAO,EAIX,OAAO,EAOIC,CAAcN,EAAW,mBAMxBA,EAAY,iBAEZH,EAAO,YAPLZ,EAAOa,IAAIC,gBAYzBd,EAAOa,IAAIS,SAAQ,WACjBV,OAIW","file":"js/810.8cadd49f376ec32ce4aa.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ins-c-page__logout{display:flex;justify-content:center;flex-direction:column;text-align:center}.ins-c-page__logout h1{margin-bottom:30px;margin-bottom:1.875rem}.ins-c-page__logout button{font-size:20px;font-size:1.25rem}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/routes/Logout.scss\",\"webpack://./node_modules/@redhat-cloud-services/frontend-components-utilities/files/Utilities/_mixins.scss\"],\"names\":[],\"mappings\":\"AAEA,oBACI,YAAa,CACb,sBAAuB,CACvB,qBAAsB,CACtB,iBAAkB,CAJtB,uBCyCE,kBAxB8C,CAyB9C,sBAxBkE,CDlBpE,2BCyCE,cAxB8C,CAyB9C,iBAxBkE\",\"sourcesContent\":[\"@import '~@redhat-cloud-services/frontend-components-utilities/files/Utilities/_mixins';\\n\\n.ins-c-page__logout {\\n    display: flex;\\n    justify-content: center;\\n    flex-direction: column;\\n    text-align: center;\\n\\n    h1 { @include rem('margin-bottom', 30px); }\\n    button { @include rem('font-size', 20px); }\\n}\",\"// Convert px to rem\\n// =================================================================/\\n@mixin rem($property, $values) {\\n\\n  // Create a couple of empty lists as output buffers.\\n  $font-size: 16px;\\n  $px-values: ();\\n  $rem-values: ();\\n\\n  // Loop through the $values list\\n  @each $value in $values {\\n\\n    // For each property value, if it's in rem or px, derive both rem and\\n    // px values for it and add those to the end of the appropriate buffer.\\n    // Ensure all pixel values are rounded to the nearest pixel.\\n    @if type-of($value) == number and not unitless($value) and (unit($value) == px) {\\n\\n      // px value given - calculate rem value from font-size\\n      $new-rem-value: $value / $font-size;\\n      $px-values: join($px-values, round($value));\\n      $rem-values: join($rem-values, unquote(\\\"#{$new-rem-value}rem\\\"));\\n\\n    } @else if type-of($value) == number and not unitless($value) and (unit($value) == '%') {\\n\\n      // % value given - don't add px or rem\\n      $px-values: join($px-values, unquote(#{$value}));\\n      $rem-values: join($rem-values, unquote(#{$value}));\\n\\n    } @else if $value == auto {\\n\\n      // auto - don't add px or rem\\n      $px-values: join($px-values, auto);\\n      $rem-values: join($rem-values, auto);\\n\\n    } @else {\\n\\n      // unitless value - use those directly as rem and calculate the px-fallback\\n      $px-values: join($px-values, round($value * $font-size));\\n      $rem-values: join($rem-values, unquote(\\\"#{$value}rem\\\"));\\n    }\\n  }\\n\\n  // output the converted rules\\n  #{$property}: $px-values;\\n  #{$property}: $rem-values;\\n\\n}\\n\\n\\n\\n// Generate font-size in rem\\n// =================================================================/\\n@mixin font-size($size, $line: $size * 1.4) {\\n  font-size: ($size);\\n  font-size: ($size / $ins-fontSize) + rem;\\n\\n  @if $line == 1 {\\n    line-height: 1;\\n\\n  } @else if $line != null {\\n    line-height: $line;\\n    line-height: ($line / $ins-fontSize) + rem;\\n  }\\n}\\n\\n\\n\\n// Generate transition\\n// =================================================================/\\n@mixin transition($property) {\\n\\n  transition: $property 0.2s cubic-bezier(0.4, 0, 0.2, 1);\\n  -o-transition: $property 0.2s cubic-bezier(0.4, 0, 0.2, 1);\\n  -ms-transition: $property 0.2s cubic-bezier(0.4, 0, 0.2, 1);\\n  -moz-transition: $property 0.2s cubic-bezier(0.4, 0, 0.2, 1);\\n  -webkit-transition: $property 0.2s cubic-bezier(0.4, 0, 0.2, 1);\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { Button, Title } from '@patternfly/react-core';\nimport React from 'react';\n\nimport './Logout.scss';\n\nconst onButtonClick = (url) => {\n  window.location.href = `./${url}`;\n};\n\nconst Logout = () => {\n  return (\n    <section className=\"pf-l-page__main-section pf-c-page__main-section ins-c-page__logout\">\n      <Title headingLevel=\"h1\" size=\"3xl\">\n        You have logged out.\n      </Title>\n      <Button variant=\"link\" onClick={() => onButtonClick('')}>\n        Take me home\n      </Button>\n    </section>\n  );\n};\n\nexport default Logout;\n","import api from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../node_modules/sass-loader/dist/cjs.js!./Logout.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../node_modules/sass-loader/dist/cjs.js!./Logout.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}