{"version":3,"sources":["webpack://landing-page-frontend/./src/routes/404.js","webpack://landing-page-frontend/./src/utils/content-generator.js","webpack://landing-page-frontend/./src/NotFound.js","webpack://landing-page-frontend/./src/store/actions.js","webpack://landing-page-frontend/./src/moduledBootstraps/bootstrap-not-found.js","webpack://landing-page-frontend/./src/store/action-types.js"],"names":["NotFound","className","Title","headingLevel","size","Button","variant","component","href","window","location","origin","pathname","split","propTypes","technologies","PropTypes","url","title","history","push","defaultProps","connect","activeTechnologies","filter","disabled","App","loadTechnologies","useEffect","dispatch","data","type","TECHOLOGIES","payload","ReactDOM","Provider","store","createStore","combineReducers","technologiesReducer","document","getElementById"],"mappings":"sOAaMA,G,SAAW,kBACf,6BAASC,UAAU,mEACjB,kBAAC,EAAAC,MAAD,CAAOC,aAAa,KAAKC,KAAK,OAA9B,kCAGA,kBAAC,IAAD,MACA,kBAAC,EAAAF,MAAD,CAAOC,aAAa,KAAKF,UAAU,qBAAnC,6GAIA,kBAAC,EAAAI,OAAD,CACEC,QAAQ,OACRC,UAAU,IACVC,KAAI,UAAKC,OAAOC,SAASC,QAArB,OAhB0C,SAA3CF,OAAOC,SAASE,SAASC,MAAM,KAAK,GAAgB,QAAU,KAanE,yBAUJb,EAASc,UAAY,CACnBC,aAAcC,YACZA,UAAgB,CACdC,IAAKD,WACLE,MAAOF,cAGXG,QAASH,UAAgB,CACvBI,KAAMJ,YAIVhB,EAASqB,aAAe,CACtBN,aAAc,GACdI,QAAS,CACPC,KAAM,eAcV,SAAeE,cAVf,WAEE,6DADmB,CAAEP,aAAc,CAAEQ,mBAAoB,KAAvDR,EACF,EADEA,aAEF,MAAO,CACLA,aACEA,GACAA,EAAaQ,mBAAmBC,QAAO,qBAAGC,eAIhD,CAAwCzB,G,iDC9DjC,I,WCQD0B,G,QAAM,SAAC,GAAyB,IAAvBC,EAAuB,EAAvBA,iBAKb,OAJAC,gBAAU,WACRD,EAAiBJ,QAGZ,kBAAC,EAAD,QAGTG,EAAIZ,UAAY,CACdK,QAASH,WACTW,iBAAkBX,UAGpBU,EAAIL,aAAe,CACjBM,iBAAkB,cAGpB,SAAeL,aAAQ,MAAM,SAACO,GAAD,MAAe,CAC1CF,iBAAkB,SAACZ,GAAD,OAChBc,GClB+BC,EDkBHf,EClBa,CAC3CgB,KAAMC,KACNC,QAASH,KAFuB,IAACA,MDgBnC,CAGIJ,G,0BErBJQ,WACE,kBAAC,EAAAC,SAAD,CACEC,OAAOC,SACLC,QAAgB,CAAEvB,aAAcwB,KAAuB,MAGzD,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,+CCfnB,IAAMT,EAAc","file":"js/554.766be37f941f1277cbaa.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Title } from '@patternfly/react-core';\nimport Icon404 from '../components/icon-404';\nimport { connect } from 'react-redux';\n\nimport './404.scss';\n\n// Chrome is not on this page, so do the isBeta here\nconst isBeta = () => {\n  return window.location.pathname.split('/')[1] === 'beta' ? '/beta' : '';\n};\n\nconst NotFound = () => (\n  <section className=\"pf-l-page__main-section pf-c-page__main-section ins-c-page__404\">\n    <Title headingLevel=\"h1\" size=\"3xl\">\n      404: It&apos;s true. We&apos;ve lost it.\n    </Title>\n    <Icon404 />\n    <Title headingLevel=\"h2\" className=\"ins-c-text__sorry\">\n      Sorry, we couldn&apos;t find what you were looking for. The page you\n      requested may have been changed or moved.\n    </Title>\n    <Button\n      variant=\"link\"\n      component=\"a\"\n      href={`${window.location.origin}${isBeta()}`}\n    >\n      Return to homepage\n    </Button>\n  </section>\n);\n\nNotFound.propTypes = {\n  technologies: PropTypes.arrayOf(\n    PropTypes.shape({\n      url: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n};\n\nNotFound.defaultProps = {\n  technologies: [],\n  history: {\n    push: () => undefined,\n  },\n};\n\nfunction mapStateToProps(\n  { technologies } = { technologies: { activeTechnologies: [] } }\n) {\n  return {\n    technologies:\n      technologies &&\n      technologies.activeTechnologies.filter(({ disabled }) => !disabled),\n  };\n}\n\nexport default connect(mapStateToProps)(NotFound);\n","export const calculatePermissions = (permissions) =>\n  Promise.all(\n    [permissions]\n      .flat()\n      .map(({ method, args } = {}) =>\n        insights.chrome?.visibilityFunctions?.[method]?.(...(args || []))\n      )\n  ).then((visibility) => visibility.every(Boolean));\n\nexport const calculateVisibility = async (toCheck) => {\n  const data = await Promise.all(\n    toCheck?.map(async (item) => {\n      const isVisible = calculatePermissions(item?.permissions);\n      return isVisible && item;\n    }) || []\n  );\n\n  return data.filter(Boolean);\n};\n\nexport const calculateEndpoints = async (endpoints) => {\n  const data = await Promise.all(\n    endpoints.map(async (endpoint) => {\n      const isVisible = await calculatePermissions(endpoint?.permissions);\n      return (\n        isVisible && {\n          ...endpoint,\n          actions: {\n            carousel: await calculateVisibility(endpoint?.actions?.carousel),\n            sections: await calculateVisibility(endpoint?.actions?.sections),\n          },\n        }\n      );\n    })\n  );\n  return data.filter(Boolean);\n};\n","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport NotFound from './routes/404';\nimport { technologiesLoaded } from './store/actions';\nimport { activeTechnologies } from './consts';\nimport './App.scss';\n\nconst App = ({ loadTechnologies }) => {\n  useEffect(() => {\n    loadTechnologies(activeTechnologies);\n  });\n\n  return <NotFound />;\n};\n\nApp.propTypes = {\n  history: PropTypes.object,\n  loadTechnologies: PropTypes.func,\n};\n\nApp.defaultProps = {\n  loadTechnologies: () => undefined,\n};\n\nexport default connect(null, (dispatch) => ({\n  loadTechnologies: (technologies) =>\n    dispatch(technologiesLoaded(technologies)),\n}))(App);\n","import {\n  TECHOLOGIES,\n  CALCULATE_ENDPOINTS,\n  LOAD_CAROUSEL,\n  LOAD_SECTIONS,\n} from './action-types';\nimport { endpoints, carousel, sections } from '../utils/config.json';\nimport { calculateEndpoints } from '../utils/content-generator';\n\nexport const technologiesLoaded = (data) => ({\n  type: TECHOLOGIES,\n  payload: data,\n});\n\nexport const loadEndpoints = () => ({\n  type: CALCULATE_ENDPOINTS,\n  payload: calculateEndpoints(endpoints),\n});\n\nexport const loadCarousel = () => ({\n  type: LOAD_CAROUSEL,\n  payload: carousel,\n});\n\nexport const loadSections = () => ({\n  type: LOAD_SECTIONS,\n  payload: sections,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport NotFound from '../moduleEntries/NotFoundEntry';\nimport { createStore, combineReducers } from 'redux';\nimport technologiesReducer from '../store/technologiesReducer';\n\nReactDOM.render(\n  <Provider\n    store={createStore(\n      combineReducers({ technologies: technologiesReducer }, {})\n    )}\n  >\n    <NotFound />\n  </Provider>,\n  document.getElementById('root')\n);\n","export const TECHOLOGIES = 'TECHNOLOGIES';\nexport const CALCULATE_ENDPOINTS = 'CALCULATE_ENDPOINTS';\nexport const LOAD_CAROUSEL = 'LOAD_CAROUSEL';\nexport const LOAD_SECTIONS = 'LOAD_SECTIONS';\n"],"sourceRoot":""}