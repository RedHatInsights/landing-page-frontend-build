{"version":3,"sources":["webpack:///./src/layout/Header.js","webpack:///./src/layout/Body.js","webpack:///./src/layout/Hero.js","webpack:///./src/layout/Marketing.js","webpack:///./src/components/rh-logo.js","webpack:///./src/layout/FooterTraditional.js","webpack:///./src/layout/Loading.js","webpack:///./src/routes/Landing.js"],"names":["Header","PageHeader","title","isBeta","window","insights","chrome","checkIfUnderMaintenance","appName","isUnderMaintenanceApps","includes","Body","technologies","useState","needsRBACTour","setNeedsRBACTour","permission","useContext","PermissionContext","useEffect","fetch","then","response","json","entitlements","is_entitled","openshift","PageSection","className","landing-page-type","needs-rbac-tour","isOrgAdmin","Grid","md","lg","hasGutter","map","key","Icon","icon","image","iconProps","url","apps","baseApp","body","isPreview","isEarlyAccess","isDevPreview","isUnderMaintenance","id","GridItem","Card","application-id","CardHeader","Stack","StackItem","aria-hidden","src","alt","size","Title","headingLevel","CardBody","Tooltip","position","TooltipPosition","bottom","content","Object","entries","appPath","Button","component","isDisabled","isInline","variant","href","CardFooter","propTypes","PropTypes","arrayOf","shape","name","string","oneOfType","func","node","bool","object","array","defaultProps","connect","activeTechnologies","filter","disabled","Hero","onClick","auth","login","Marketing","Fragment","sm","xl","xl2","gutter","marketingImage","marketingUrls","marketingText","learnMore","aria-label","tryIt","marketing","RhLogo","data-name","xmlns","viewBox","d","FooterTraditional","isModalOpen","setIsModalOpen","role","target","rel","Modal","isOpen","ModalVariant","small","onClose","isFooterLeftAligned","Loading","Main","Spinner","centered","Landing","isUserReady","setIsUserReady","isUnauthed","setIsUnauthed","notEntitled","setIsNotEntitled","dispatch","useDispatch","params","location","search","slice","split","reduce","acc","curr","values","find","item","entitlement","not_entitled","keys","length","getUser","user","handleModalToggle","history","pushState","emptyAlertTitle","addNotification","app-entitlement","emptyID","aria-title","emptyTitle","header","emptyText","emptyAction","primary","navigate","secondary","close","loadTechnologies","withRouter"],"mappings":"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","file":"js/6.f4706549be0f755aa6c8.js","sourcesContent":["import React from 'react';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\n\nconst Header = () => (\n    <PageHeader>\n        <PageHeaderTitle title='Manage, automate, and optimize your IT'/>\n    </PageHeader>\n);\n\nexport default Header;\n","import React, { useState, useEffect, useContext } from 'react';\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardFooter,\n    CardHeader,\n    Grid,\n    GridItem,\n    PageSection,\n    Stack,\n    StackItem,\n    Title,\n    Tooltip,\n    TooltipPosition\n} from '@patternfly/react-core';\nimport { ArrowRightIcon, BinocularsIcon, CodeIcon, OutlinedEyeIcon } from '@patternfly/react-icons';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport './Body.scss';\nimport { PermissionContext } from '../App';\n\nfunction isBeta() {\n    return (window.insights.chrome.isBeta() === true ? '/beta/' : '/');\n}\n\nconst checkIfUnderMaintenance = (appName, isUnderMaintenanceApps) => {\n    return isUnderMaintenanceApps && isUnderMaintenanceApps.includes(appName) ? true : false;\n};\n\nconst Body = ({ technologies }) => {\n    const [ needsRBACTour, setNeedsRBACTour ] = useState();\n    const permission = useContext(PermissionContext);\n\n    useEffect(() => {\n        fetch('/api/entitlements/v1/services') // We cannot use chrome's function here\n        .then(response => response.json())\n        .then(entitlements => {\n            !entitlements.insights.is_entitled && entitlements.openshift.is_entitled ? setNeedsRBACTour(false) : setNeedsRBACTour(true);\n        })\n        .catch(setNeedsRBACTour(false));\n    }, []);\n\n    return (\n        <PageSection\n            className='pf-m-fill ins-p-landing__content'\n            landing-page-type='authenticated'\n            needs-rbac-tour={ permission.isOrgAdmin ? `${needsRBACTour}` : 'false' }>\n            <Grid md={ 6 } lg={ 4 } hasGutter>\n                { technologies.map(({ icon: Icon, image, iconProps, title, url, apps, baseApp, body, isPreview, isEarlyAccess, isDevPreview, isUnderMaintenance, isUnderMaintenanceApps, id }, key) => ( // eslint-disable-line max-len\n                    <GridItem key={ key } className='ins-c-application-card'>\n                        <Card className=\"ins-c-application-info\" application-id={ id }>\n                            <CardHeader>\n                                <Stack>\n                                    <StackItem>\n                                        { image && <img\n                                            className=\"ins-c-application-info__logo\"\n                                            aria-hidden\n                                            src={ image }\n                                            alt={ `${title} logo` } /> }\n                                        { Icon && <Icon\n                                            className=\"ins-c-application-info__logo ins-c-icon__active\"\n                                            aria-hidden\n                                            size=\"xl\"\n                                            alt={ `${title} logo` }\n                                            { ...iconProps } /> }\n                                    </StackItem>\n                                    <StackItem>\n                                        <Title headingLevel='h2'>\n                                            { title }\n                                        </Title>\n                                    </StackItem>\n                                </Stack>\n                            </CardHeader>\n                            <CardBody>\n                                <Stack hasGutter className='ins-c-application-info__content'>\n                                    { isPreview &&\n                                        <StackItem>\n                                            <div className=\"ins-m-tech-preview\">\n                                                <BinocularsIcon size=\"sm\" /> Tech preview\n                                            </div>\n                                        </StackItem>\n                                    }\n                                    { isDevPreview &&\n                                        <StackItem>\n                                            <div className=\"ins-m-dev-preview\">\n                                                <CodeIcon size=\"sm\" /> Developer preview\n                                            </div>\n                                        </StackItem>\n                                    }\n                                    { isEarlyAccess &&\n                                        <StackItem>\n                                            <Tooltip\n                                                position={ TooltipPosition.bottom }\n                                                content={ <span>Available to limited customers</span> }>\n                                                <div className=\"ins-m-early-preview\">\n                                                    <OutlinedEyeIcon size=\"sm\" /> Early access preview\n                                                </div>\n                                            </Tooltip>\n                                        </StackItem>\n                                    }\n                                    <StackItem>\n                                        <span className='ins-m-gray'>{ body }</span>\n                                    </StackItem>\n                                    <StackItem className='ins-c-application-info__content-applist'>\n                                        { apps && Object.entries(apps).map(([ appName, appPath ]) => (\n                                            <Button\n                                                component='a'\n                                                isDisabled={ isUnderMaintenance || checkIfUnderMaintenance(appName, isUnderMaintenanceApps) }\n                                                isInline\n                                                variant=\"link\"\n                                                key={ appName }\n                                                href={ `${isBeta()}${url}${appPath}` }>\n                                                { appName }\n                                            </Button>\n                                        )) }\n                                    </StackItem>\n                                </Stack>\n                            </CardBody>\n                            <CardFooter>\n                                <Button\n                                    component='a'\n                                    isInline\n                                    isDisabled={ isUnderMaintenance }\n                                    variant=\"link\"\n                                    className={ `ins-c-application-info__open ins-c-application-info__open-${url}` }\n                                    href= { baseApp ? `${isBeta()}${url}${baseApp}` : `${isBeta()}${url}` }>\n                                    <span> Open </span>\n                                    <ArrowRightIcon size=\"sm\" />\n                                </Button>\n                            </CardFooter>\n                        </Card>\n                    </GridItem>\n                )) }\n            </Grid>\n        </PageSection>\n    );\n};\n\nBody.propTypes = {\n    technologies: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string,\n        icon: PropTypes.oneOfType([ PropTypes.func, PropTypes.string ]),\n        body: PropTypes.node,\n        title: PropTypes.node,\n        isPreview: PropTypes.bool,\n        isEarlyAccess: PropTypes.bool,\n        url: PropTypes.string,\n        apps: PropTypes.object,\n        baseApp: PropTypes.string,\n        isUnderMaintenance: PropTypes.bool,\n        isUnderMaintenanceApps: PropTypes.array\n    }))\n};\n\nBody.defaultProps = {\n    technologies: []\n};\n\nfunction mapStateToProps({ technologies } = { technologies: { activeTechnologies: []}}) {\n    return {\n        technologies: technologies && technologies.activeTechnologies.filter(({ disabled }) => !disabled)\n    };\n}\n\nexport { mapStateToProps };\nexport default connect(mapStateToProps)(Body);\n","import { Button, PageSection, Title } from '@patternfly/react-core';\nimport React from 'react';\n\nimport './Hero.scss';\n\nconst Hero = () => (\n    <PageSection className='ins-c-hero pf-m-fill pf-l-flex pf-m-align-items-center pf-m-justify-content-center'>\n        <article className='pf-l-flex pf-m-column pf-m-align-items-center'>\n            <Title headingLevel='h1' size='4xl' className='ins-c-hero__title pf-m-spacer-lg'> Explore our open, multicloud tools </Title>\n            <Title headingLevel='h2' className='ins-c-hero__sub-title pf-m-spacer-xl'>\n                Discover Red Hat<sup className='ins-c-rball'>®</sup> software-as-a-service\n            </Title>\n            <Button className='ins-c-hero__login' onClick={ () => window.insights.chrome.auth.login() }> Log in to your Red Hat account</Button>\n            <Button\n                component='a'\n                isInline\n                variant='link'\n                className='ins-c-hero__new-customer'\n                href='https://www.redhat.com/en/customers'>\n                Not a customer?\n            </Button>\n        </article>\n    </PageSection>\n);\n\nexport default Hero;\n","import React from 'react';\nimport { Card, CardBody, CardFooter, CardHeader, Grid, PageSection, Stack, StackItem } from '@patternfly/react-core';\nimport { ArrowRightIcon } from '@patternfly/react-icons';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Hero from './Hero';\n\nimport './Marketing.scss';\n\nconst Marketing = ({ technologies }) => (\n    <React.Fragment>\n        <Hero/>\n        <PageSection className='ins-c-marketing pf-m-no-fill' landing-page-type='unauthenticated'>\n            <Grid sm={ 12 } md={ 6 } xl={ 6 } xl2={ 4 } gutter=\"sm\">\n                { technologies.map(({ marketingImage, title, marketingUrls, marketingText, id }, key) => (\n                    <Card className=\"ins-c-application-info pf-m-card-link\" application-id={ id } key={ key }>\n                        <CardHeader>\n                            <Stack gutter='sm'>\n                                <StackItem className='ins-c-application-logo'>\n                                    { marketingImage && <img\n                                        className=\"ins-c-application-info__logo\"\n                                        aria-hidden\n                                        src={ marketingImage }\n                                        alt={ `${title} logo` } /> }\n                                </StackItem>\n                            </Stack>\n                        </CardHeader>\n                        <CardBody>\n                            <Stack>\n                                <StackItem>\n                                    <span className='ins-m-gray'>{ marketingText }</span>\n                                </StackItem>\n                            </Stack>\n                        </CardBody>\n                        <CardFooter className='pf-c-card__card-links'>\n                            <a href={ marketingUrls.learnMore } aria-label={ `Go to ${title}` }>Learn more<ArrowRightIcon size=\"sm\" /></a>\n                            { marketingUrls.tryIt &&\n                                <a href={ marketingUrls.tryIt } aria-label='Request an evaluation'>Try it<ArrowRightIcon size=\"sm\" /></a>\n                            }\n                        </CardFooter>\n                    </Card>\n                )) }\n            </Grid>\n        </PageSection>\n    </React.Fragment>\n);\n\nMarketing.propTypes = {\n    technologies: PropTypes.arrayOf(PropTypes.shape({\n        marketingImage: PropTypes.oneOfType([ PropTypes.func, PropTypes.string ]),\n        marketing: PropTypes.bool,\n        marketingUrls: PropTypes.object,\n        marketingText: PropTypes.string\n    }))\n};\n\nMarketing.defaultProps = {\n    technologies: []\n};\n\nfunction mapStateToProps({ technologies } = { technologies: { activeTechnologies: []}}) {\n    return {\n        technologies: technologies && technologies.activeTechnologies.filter(({ marketing }) => marketing)\n    };\n}\n\nexport { mapStateToProps };\nexport default connect(mapStateToProps)(Marketing);\n","import React from 'react';\n\nimport './rh-logo.scss';\n\nconst RhLogo = () => (\n    // eslint-disable-next-line max-len\n    <svg id=\"redhat-logo\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 613 145\"><defs></defs><title>RedHat-Logo-A-Color</title><path className=\"cls-1\" d=\"M127.47,83.49c12.51,0,30.61-2.58,30.61-17.46a14,14,0,0,0-.31-3.42l-7.45-32.36c-1.72-7.12-3.23-10.35-15.73-16.6C124.89,8.69,103.76.5,97.51.5,91.69.5,90,8,83.06,8c-6.68,0-11.64-5.6-17.89-5.6-6,0-9.91,4.09-12.93,12.5,0,0-8.41,23.72-9.49,27.16A6.43,6.43,0,0,0,42.53,44c0,9.22,36.3,39.45,84.94,39.45M160,72.07c1.73,8.19,1.73,9.05,1.73,10.13,0,14-15.74,21.77-36.43,21.77C78.54,104,37.58,76.6,37.58,58.49a18.45,18.45,0,0,1,1.51-7.33C22.27,52,.5,55,.5,74.22c0,31.48,74.59,70.28,133.65,70.28,45.28,0,56.7-20.48,56.7-36.65,0-12.72-11-27.16-30.83-35.78\"/><path d=\"M160,72.07c1.73,8.19,1.73,9.05,1.73,10.13,0,14-15.74,21.77-36.43,21.77C78.54,104,37.58,76.6,37.58,58.49a18.45,18.45,0,0,1,1.51-7.33l3.66-9.06A6.43,6.43,0,0,0,42.53,44c0,9.22,36.3,39.45,84.94,39.45,12.51,0,30.61-2.58,30.61-17.46a14,14,0,0,0-.31-3.42Z\"/><path d=\"M579.74,92.8c0,11.89,7.15,17.67,20.19,17.67a52.11,52.11,0,0,0,11.89-1.68V95a24.84,24.84,0,0,1-7.68,1.16c-5.37,0-7.36-1.68-7.36-6.73V68.3h15.56V54.1H596.78v-18l-17,3.68V54.1H568.49V68.3h11.25Zm-53,.32c0-3.68,3.69-5.47,9.26-5.47a43.12,43.12,0,0,1,10.1,1.26v7.15a21.51,21.51,0,0,1-10.63,2.63c-5.46,0-8.73-2.1-8.73-5.57m5.2,17.56c6,0,10.84-1.26,15.36-4.31v3.37h16.82V74.08c0-13.56-9.14-21-24.39-21-8.52,0-16.94,2-26,6.1l6.1,12.52c6.52-2.74,12-4.42,16.83-4.42,7,0,10.62,2.73,10.62,8.31v2.73a49.53,49.53,0,0,0-12.62-1.58c-14.31,0-22.93,6-22.93,16.73,0,9.78,7.78,17.24,20.19,17.24m-92.44-.94h18.09V80.92h30.29v28.82H506V36.12H487.93V64.41H457.64V36.12H439.55ZM370.62,81.87c0-8,6.31-14.1,14.62-14.1A17.22,17.22,0,0,1,397,72.09V91.54A16.36,16.36,0,0,1,385.24,96c-8.2,0-14.62-6.1-14.62-14.09m26.61,27.87h16.83V32.44l-17,3.68V57.05a28.3,28.3,0,0,0-14.2-3.68c-16.19,0-28.92,12.51-28.92,28.5a28.25,28.25,0,0,0,28.4,28.6,25.12,25.12,0,0,0,14.93-4.83ZM320,67c5.36,0,9.88,3.47,11.67,8.83H308.47C310.15,70.3,314.36,67,320,67M291.33,82c0,16.2,13.25,28.82,30.28,28.82,9.36,0,16.2-2.53,23.25-8.42l-11.26-10c-2.63,2.74-6.52,4.21-11.14,4.21a14.39,14.39,0,0,1-13.68-8.83h39.65V83.55c0-17.67-11.88-30.39-28.08-30.39a28.57,28.57,0,0,0-29,28.81M262,51.58c6,0,9.36,3.78,9.36,8.31S268,68.2,262,68.2H244.11V51.58Zm-36,58.16h18.09V82.92h13.77l13.89,26.82H292l-16.2-29.45a22.27,22.27,0,0,0,13.88-20.72c0-13.25-10.41-23.45-26-23.45H226Z\"/></svg>\n);\n\nexport default RhLogo;\n","import { Button, Modal, ModalVariant, PageSection, Title } from '@patternfly/react-core';\nimport React, { useState } from 'react';\nimport { RhLogo } from '../components';\n\nimport './FooterTraditional.scss';\n\nconst FooterTraditional = () => {\n\n    const [ isModalOpen, setIsModalOpen ] = useState(false);\n\n    return (\n        <React.Fragment>\n            <PageSection className='ins-c-footer__traditional pf-m-no-fill'>\n                <footer role='contentinfo' className='pf-l-flex pf-m-column pf-m-row-on-lg pf-m-align-items-center-on-lg'>\n                    <a href='https://www.redhat.com' className='ins-p-footer__logo' target='_blank' rel='noopener noreferrer'><RhLogo /></a>\n                    <div className='ins-c-footer__traditional-nav\n                                    pf-l-flex pf-m-column\n                                    pf-m-row-on-lg\n                                    pf-m-flex-1-on-lg pf-m-justify-content-flex-end-on-lg'>\n                        <p className='copyright pf-m-spacer-xl-on-lg'>Copyright © 2020 Red Hat, Inc.</p>\n                        <nav>\n                            <ul className='pf-l-flex pf-m-column pf-m-row-on-md'>\n                                <li>\n                                    <Button variant='link' className='nav-link ins-p-footer__browser-support' onClick={ () => setIsModalOpen(true) }>\n                                        Browser Support\n                                    </Button>\n                                </li>\n                                <li>\n                                    <a className='nav-link ins-p-footer__privacy-policy' href='https://www.redhat.com/en/about/privacy-policy'>\n                                        Privacy Policy\n                                    </a>\n                                </li>\n                                <li>\n                                    <a className='nav-link ins-p-footer__terms' href='https://access.redhat.com/help/terms/'>\n                                        Terms of Use\n                                    </a>\n                                </li>\n                                <li>\n                                    <a className='nav-link ins-p-footer__all-policies' href='https://www.redhat.com/en/about/all-policies-guidelines'>\n                                        All Policies and Guidelines\n                                    </a>\n                                </li>\n                            </ul>\n                        </nav>\n                    </div>\n                </footer>\n            </PageSection>\n            <Modal\n                title=\"Browser support\"\n                isOpen={ isModalOpen }\n                variant={ ModalVariant.small }\n                className='ins-p-browser-support'\n                onClose={ () => setIsModalOpen(false) }\n                isFooterLeftAligned>\n                <p>\n                    Red Hat captures and regularly reviews statistical data from our actual web visitors and registered users,\n                    rather than generic industry data,\n                    to identify the browsers we need to support in alignment with our customers’ needs.\n                    Additionally, to safeguard customer data,\n                    only browsers which receive security updates from the browser manufacturer are considered for support.\n                    We have implemented this policy to ensure that we can provide an excellent experience to a wide user base.\n                </p>\n                <Title headingLevel=\"h4\"> Cookies and Javascript </Title>\n                <p> To successfully interact with our websites and services, your browser must meet the following feature requirements: </p>\n                <ul>\n                    <li> The browser must be configured to accept cookies </li>\n                    <li> The browser must be configured to execute JavaScript </li>\n                </ul>\n                <Title headingLevel=\"h4\"> Specific browser support </Title>\n                <p> We validate against and fully support our customers&#39; use of the past two major releases of the following browsers: </p>\n                <ul>\n                    <li> Mozilla Firefox </li>\n                    <li> Google Chrome </li>\n                    <li> Apple Safari </li>\n                    <li> Microsoft Edge </li>\n                </ul>\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nexport default FooterTraditional;\n","import React from 'react';\n\nimport { Main, Spinner } from '@redhat-cloud-services/frontend-components';\n\nconst Loading = () => (\n    <Main>\n        <Spinner centered/>\n    </Main>\n);\n\nexport default Loading;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Modal, Stack, StackItem, Title } from '@patternfly/react-core';\nimport Header from '../layout/Header';\nimport Body from '../layout/Body';\nimport Marketing from '../layout/Marketing';\nimport FooterTraditional from '../layout/FooterTraditional';\nimport Loading from '../layout/Loading';\nimport { activeTechnologies } from '../consts';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/cjs/actions';\nimport './Landing.scss';\n\nconst Landing = () => {\n\n    const [ isModalOpen, setIsModalOpen ] = useState(false);\n    const [ isUserReady, setIsUserReady ] = useState(false);\n    const [ isUnauthed, setIsUnauthed ] = useState(true);\n    const [ notEntitled, setIsNotEntitled ] = useState();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        const params = location.search.slice(1).split('&').reduce((acc, curr) => ({\n            ...acc,\n            [curr.split('=')[0]]: Object.values(activeTechnologies).find(item => item.entitlement === curr.split('=')[1])\n        }), {});\n\n        setIsNotEntitled(params.not_entitled);\n        setIsModalOpen(params && Object.keys(params).length > 0);\n\n        window.insights.chrome.auth.getUser().then(user => {\n            if (user) {\n                setIsUnauthed(false);\n            } else {\n                setIsUnauthed(true);\n            }\n        }).catch(() => {\n            setIsUnauthed(true);\n        })\n        .then(() =>\n            setIsUserReady(true)\n        );\n    }, []);\n\n    const handleModalToggle = () => {\n        setIsModalOpen(false);\n        history.pushState(null, '', location.href.split('?')[0]);\n    };\n\n    const renderAlert = (title) => {\n        dispatch(\n            addNotification({\n                variant: 'danger',\n                title\n            })\n        );\n    };\n\n    if (isUserReady) {\n        return (\n            <Fragment>\n                { isUnauthed\n                    ? <Marketing />\n                    : <Fragment>\n                        <Header />\n                        <Body />\n                    </Fragment>\n                }\n                <FooterTraditional />\n                { notEntitled && notEntitled.emptyAlertTitle &&\n                    renderAlert(notEntitled.emptyAlertTitle)\n                }\n                { notEntitled && !notEntitled.emptyAlertTitle && <Modal\n                    className='ins-c-error-modal'\n                    app-entitlement={ notEntitled.emptyID }\n                    isOpen={ isModalOpen }\n                    onClose={ handleModalToggle }\n                    aria-title={ notEntitled.emptyTitle }\n                    header={ <Title headingLevel=\"h2\" size='2xl'>{ notEntitled.emptyTitle }</Title> }\n                >\n                    <Stack hasGutter className='ins-c-error-state'>\n                        <StackItem className='ins-c-error-state__image'>\n                            { notEntitled.icon && <notEntitled.icon\n                                className=\"ins-c-icon__active\"\n                                aria-hidden\n                                alt={ `${notEntitled.title} logo` }\n                                { ...notEntitled.iconProps }\n                            /> }\n                            { notEntitled.image && <img\n                                className=\"ins-c-application-info__logo\"\n                                aria-hidden\n                                src={ notEntitled.image }\n                                alt={ `${notEntitled.title} logo` } /> }\n                        </StackItem>\n                        <StackItem className='ins-c-error-state__body'>\n                            { notEntitled.emptyText }\n                        </StackItem>\n                        <StackItem className='ins-c-error-state__footer'>\n                            {\n                                notEntitled.emptyAction.primary &&\n                                    <Button variant=\"primary\" className='ins-c-error-state__footer-action' onClick={ () => {\n                                        if (notEntitled.emptyAction.primary.navigate) {\n                                            window.location.href = notEntitled.emptyAction.primary.navigate;\n                                        }\n                                    } } >\n                                        { notEntitled.emptyAction.primary.title }\n                                    </Button>\n                            }\n                            <section className='ins-c-error-state__footer-action--secondary'>\n                                {\n                                    notEntitled.emptyAction.secondary && notEntitled.emptyAction.secondary.navigate &&\n                                        <Button variant=\"link\" className='ins-c-error-state__footer-secondary' onClick={ ()=> {\n                                            window.location.href = notEntitled.emptyAction.secondary.navigate; } }>\n                                            { notEntitled.emptyAction.secondary.title ?\n                                                `${ notEntitled.emptyAction.secondary.title }` : 'Learn More'\n                                            }\n                                        </Button>\n                                }\n                                {\n                                    notEntitled.emptyAction.secondary && !notEntitled.emptyAction.secondary.navigate &&\n                                        <Button variant=\"link\" className='ins-c-error-state__footer-secondary'>\n                                            { notEntitled.emptyAction.secondary.title ?\n                                                `${ notEntitled.emptyAction.secondary.title }` : 'Learn More'\n                                            }\n                                        </Button>\n                                }\n                                <Button variant=\"link\" className='ins-c-error-state__footer-close' onClick={ handleModalToggle }>\n                                    { notEntitled.emptyAction.close ? `${notEntitled.emptyAction.close.title }` : 'Close' }\n                                </Button>\n                            </section>\n                        </StackItem>\n                    </Stack>\n                </Modal> }\n            </Fragment>\n        );\n    } else {\n        return <Loading/>;\n    }\n};\n\nLanding.propTypes = {\n    history: PropTypes.object,\n    loadTechnologies: PropTypes.func,\n    location: PropTypes.shape({\n        search: PropTypes.string\n    })\n};\n\nLanding.defaultProps = {\n    loadTechnologies: () => undefined\n};\n\nexport default withRouter(Landing);\n"],"sourceRoot":""}