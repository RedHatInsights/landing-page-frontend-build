{"version":3,"file":"js/2130.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/MenuToggle/MenuToggle.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/MenuToggle/MenuToggleAction.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/MenuToggle/MenuToggleCheckbox.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/OUIA/ouia.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/MenuToggle/menu-toggle';\nimport { css } from '@patternfly/react-styles';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nclass MenuToggleBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.displayName = 'MenuToggleBase';\n    }\n    render() {\n        const _a = this.props, { children, className, icon, badge, isExpanded, isDisabled, isFullHeight, isFullWidth, splitButtonOptions, variant, innerRef, onClick, 'aria-label': ariaLabel } = _a, otherProps = __rest(_a, [\"children\", \"className\", \"icon\", \"badge\", \"isExpanded\", \"isDisabled\", \"isFullHeight\", \"isFullWidth\", \"splitButtonOptions\", \"variant\", \"innerRef\", \"onClick\", 'aria-label']);\n        const isPlain = variant === 'plain';\n        const isPlainText = variant === 'plainText';\n        const isTypeahead = variant === 'typeahead';\n        const toggleControls = (React.createElement(\"span\", { className: css(styles.menuToggleControls) },\n            React.createElement(\"span\", { className: css(styles.menuToggleToggleIcon) },\n                React.createElement(CaretDownIcon, { \"aria-hidden\": true }))));\n        const content = (React.createElement(React.Fragment, null,\n            icon && React.createElement(\"span\", { className: css(styles.menuToggleIcon) }, icon),\n            isTypeahead ? children : React.createElement(\"span\", { className: css(styles.menuToggleText) }, children),\n            React.isValidElement(badge) && React.createElement(\"span\", { className: css(styles.menuToggleCount) }, badge),\n            isTypeahead ? (React.createElement(\"button\", { type: \"button\", className: css(styles.menuToggleButton), \"aria-expanded\": isExpanded, onClick: onClick, \"aria-label\": \"Menu toggle\" }, toggleControls)) : (toggleControls)));\n        const commonStyles = css(styles.menuToggle, isExpanded && styles.modifiers.expanded, variant === 'primary' && styles.modifiers.primary, variant === 'secondary' && styles.modifiers.secondary, (isPlain || isPlainText) && styles.modifiers.plain, isPlainText && styles.modifiers.text, isFullHeight && styles.modifiers.fullHeight, isFullWidth && styles.modifiers.fullWidth, isDisabled && styles.modifiers.disabled, className);\n        const componentProps = Object.assign(Object.assign({ children: isPlain ? children : content }, (isDisabled && { disabled: true })), otherProps);\n        if (isTypeahead) {\n            return (React.createElement(\"div\", Object.assign({ ref: innerRef, className: css(commonStyles, styles.modifiers.typeahead) }, componentProps)));\n        }\n        if (splitButtonOptions) {\n            return (React.createElement(\"div\", { ref: innerRef, className: css(commonStyles, styles.modifiers.splitButton, (splitButtonOptions === null || splitButtonOptions === void 0 ? void 0 : splitButtonOptions.variant) === 'action' && styles.modifiers.action) }, splitButtonOptions === null || splitButtonOptions === void 0 ? void 0 :\n                splitButtonOptions.items,\n                React.createElement(\"button\", Object.assign({ className: css(styles.menuToggleButton), type: \"button\", \"aria-expanded\": isExpanded, \"aria-label\": ariaLabel, disabled: isDisabled, onClick: onClick }, otherProps), toggleControls)));\n        }\n        return (React.createElement(\"button\", Object.assign({ className: css(commonStyles), type: \"button\", \"aria-label\": ariaLabel, \"aria-expanded\": isExpanded, ref: innerRef, disabled: isDisabled, onClick: onClick }, componentProps)));\n    }\n}\nMenuToggleBase.defaultProps = {\n    className: '',\n    isExpanded: false,\n    isDisabled: false,\n    isFullWidth: false,\n    isFullHeight: false\n};\nexport const MenuToggle = React.forwardRef((props, ref) => (React.createElement(MenuToggleBase, Object.assign({ innerRef: ref }, props))));\nMenuToggle.displayName = 'MenuToggle';\n//# sourceMappingURL=MenuToggle.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/MenuToggle/menu-toggle';\nimport { css } from '@patternfly/react-styles';\nclass MenuToggleAction extends React.Component {\n    render() {\n        const _a = this.props, { id, className, onClick, isDisabled, children } = _a, props = __rest(_a, [\"id\", \"className\", \"onClick\", \"isDisabled\", \"children\"]);\n        return (React.createElement(\"button\", Object.assign({ id: id, className: css(styles.menuToggleButton, className), onClick: onClick, type: \"button\", disabled: isDisabled }, props), children));\n    }\n}\nMenuToggleAction.displayName = 'MenuToggleAction';\nMenuToggleAction.defaultProps = {\n    className: '',\n    isDisabled: false,\n    onClick: () => { }\n};\nexport { MenuToggleAction };\n//# sourceMappingURL=MenuToggleAction.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Check/check';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nclass MenuToggleCheckbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            this.props.onChange(event.target.checked, event);\n        };\n        this.calculateChecked = () => {\n            const { isChecked, defaultChecked } = this.props;\n            if (isChecked === null) {\n                // return false here and the indeterminate state will be set to true through the ref\n                return false;\n            }\n            else if (isChecked !== undefined) {\n                return isChecked;\n            }\n            return defaultChecked;\n        };\n        this.state = {\n            ouiaStateId: getDefaultOUIAId(MenuToggleCheckbox.displayName)\n        };\n    }\n    render() {\n        const _a = this.props, { className, isValid, isDisabled, isChecked, children, ouiaId, ouiaSafe, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        onChange, defaultChecked, id } = _a, props = __rest(_a, [\"className\", \"isValid\", \"isDisabled\", \"isChecked\", \"children\", \"ouiaId\", \"ouiaSafe\", \"onChange\", \"defaultChecked\", \"id\"]);\n        const text = children && (React.createElement(\"span\", { className: css(styles.checkLabel, className), \"aria-hidden\": \"true\", id: id }, children));\n        return (React.createElement(\"label\", { className: css(styles.check, !children && styles.modifiers.standalone, className), htmlFor: id },\n            React.createElement(\"input\", Object.assign({ className: css(styles.checkInput) }, (this.calculateChecked() !== undefined && { onChange: this.handleChange }), { name: id, type: \"checkbox\", ref: (elem) => elem && (elem.indeterminate = isChecked === null), \"aria-invalid\": !isValid, disabled: isDisabled }, (defaultChecked !== undefined ? { defaultChecked } : { checked: isChecked }), getOUIAProps(MenuToggleCheckbox.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), props)),\n            text));\n    }\n}\nMenuToggleCheckbox.displayName = 'MenuToggleCheckbox';\nMenuToggleCheckbox.defaultProps = {\n    isValid: true,\n    isDisabled: false,\n    onChange: () => undefined\n};\nexport { MenuToggleCheckbox };\n//# sourceMappingURL=MenuToggleCheckbox.js.map","import { useMemo } from 'react';\nlet uid = 0;\nconst ouiaPrefix = 'OUIA-Generated-';\nconst ouiaIdByRoute = {};\n/** Get props to conform to OUIA spec\n *\n * For functional components, use the useOUIAProps function instead\n *\n * In class based components, create a state variable ouiaStateId to create a static generated ID:\n * state = {\n *  ouiaStateId: getDefaultOUIAId(Chip.displayName)\n * }\n * This generated ID should remain alive as long as the component is not unmounted.\n *\n * Then add the attributes to the component\n * {...getOUIAProps('OverflowChip', this.props.ouiaId !== undefined ? this.props.ouiaId : this.state.ouiaStateId)}\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {boolean} ouiaSafe false if in animation\n */\nexport function getOUIAProps(componentType, id, ouiaSafe = true) {\n    return {\n        'data-ouia-component-type': `PF5/${componentType}`,\n        'data-ouia-safe': ouiaSafe,\n        'data-ouia-component-id': id\n    };\n}\n/**\n * Hooks version of the getOUIAProps function that also memoizes the generated ID\n * Can only be used in functional components\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {boolean} ouiaSafe false if in animation\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport const useOUIAProps = (componentType, id, ouiaSafe = true, variant) => ({\n    'data-ouia-component-type': `PF5/${componentType}`,\n    'data-ouia-safe': ouiaSafe,\n    'data-ouia-component-id': useOUIAId(componentType, id, variant)\n});\n/**\n * Returns the ID or the memoized generated ID\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport const useOUIAId = (componentType, id, variant) => {\n    const defaultOUIAId = useMemo(() => getDefaultOUIAId(componentType, variant), [componentType, variant]);\n    return id !== null && id !== void 0 ? id : defaultOUIAId;\n};\n/**\n * Returns a generated id based on the URL location\n *\n * @param {string} componentType OUIA component type\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport function getDefaultOUIAId(componentType, variant) {\n    /*\n    ouiaIdByRoute = {\n      [route+componentType]: [number]\n    }\n    */\n    try {\n        let key;\n        if (typeof window !== 'undefined') {\n            // browser environments\n            key = `${window.location.href}-${componentType}-${variant || ''}`;\n        }\n        else {\n            // node/SSR environments\n            key = `${componentType}-${variant || ''}`;\n        }\n        if (!ouiaIdByRoute[key]) {\n            ouiaIdByRoute[key] = 0;\n        }\n        return `${ouiaPrefix}${componentType}-${variant ? `${variant}-` : ''}${++ouiaIdByRoute[key]}`;\n    }\n    catch (exception) {\n        return `${ouiaPrefix}${componentType}-${variant ? `${variant}-` : ''}${++uid}`;\n    }\n}\n//# sourceMappingURL=ouia.js.map"],"names":["MenuToggleBase","constructor","super","arguments","this","displayName","render","_a","props","children","className","icon","badge","isExpanded","isDisabled","isFullHeight","isFullWidth","splitButtonOptions","variant","innerRef","onClick","ariaLabel","otherProps","__rest","isPlain","isPlainText","isTypeahead","toggleControls","menuToggleControls","menuToggleToggleIcon","content","menuToggleIcon","menuToggleText","menuToggleCount","type","menuToggleButton","commonStyles","menuToggle","modifiers","expanded","primary","secondary","plain","text","fullHeight","fullWidth","disabled","componentProps","Object","assign","ref","typeahead","splitButton","action","items","defaultProps","MenuToggle","MenuToggleAction","id","MenuToggleCheckbox","handleChange","event","onChange","target","checked","calculateChecked","isChecked","defaultChecked","undefined","state","ouiaStateId","isValid","ouiaId","ouiaSafe","checkLabel","check","standalone","htmlFor","checkInput","name","elem","indeterminate","uid","ouiaPrefix","ouiaIdByRoute","getOUIAProps","componentType","useOUIAProps","useOUIAId","defaultOUIAId","useMemo","getDefaultOUIAId","key","window","location","href","exception"],"sourceRoot":""}