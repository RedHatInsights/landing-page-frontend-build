{"version":3,"file":"js/7112.xxxxxxxxxxxxxxxxxxxx.js","mappings":"0LAKA,MAoBA,EApBgB,KACd,MACM,OAAEA,IAAW,SACbC,EACHD,MAAY,IAAAE,SAAQ,yCACnBF,MAAY,IAAAE,SAAQ,8CACxB,OACE,kBAAC,EAAAC,SAAQ,KACNF,EACC,kBAAC,EAAAG,kBAAiB,CAChBC,SAAU,KACVC,iBAAkB,IAAM,qCACxBC,MAXM,eAYNC,OAAO,mBAEP,KAEP,C","sources":["webpack:///./src/routes/Landing.tsx"],"sourcesContent":["import React, { Fragment } from 'react';\nimport { useFlag } from '@unleash/proxy-client-react';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst Landing = () => {\n  const scope = 'widgetLayout';\n  const { isBeta } = useChrome();\n  const widgetLayoutLandingPageEnabled =\n    (isBeta() && useFlag('platform.landing-page.widgetization')) ||\n    (!isBeta() && useFlag('platform.landing-page.widgetization-stable'));\n  return (\n    <Fragment>\n      {widgetLayoutLandingPageEnabled ? (\n        <ScalprumComponent\n          fallback={null}\n          LoadingComponent={() => <></>}\n          scope={scope}\n          module=\"./WidgetLayout\"\n        />\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default Landing;\n"],"names":["isBeta","widgetLayoutLandingPageEnabled","useFlag","Fragment","ScalprumComponent","fallback","LoadingComponent","scope","module"],"sourceRoot":""}