{"version":3,"sources":["webpack:///./src/store/contentReducer.js","webpack:///./src/App.js","webpack:///./src/store/action-types.js","webpack:///./src/store/index.js"],"names":["applyReducerHash","LOAD_DATA","state","payload","estate","recommendations","configTryLearn","REMOVE_ESTATE_TILE","map","items","filter","id","REMOVE_RECOMMENDATION_TILE","tileId","category","group","removeTileFromSections","loaded","Landing","lazy","Maintenance","NotFound","routes","landing","maintenance","PermissionContext","createContext","useState","isOrgAdmin","setIsOrgAdmin","useEffect","getRegistry","register","contentStore","insights","chrome","init","identifyApp","window","auth","getUser","then","user","identity","is_org_admin","locale","Provider","value","Suspense","fallback","Bullseye","Spinner","size","Switch","Route","exact","path","component","landingBeta","middlewareListener","registry","MiddlewareListener","middleware","getMiddleware","promiseMiddleware","notificationsMiddleware","item","notifications","notificationsReducer"],"mappings":"81BAmDA,SAAeA,SAAgB,eAE1BC,MA3CE,SACLC,EADK,GAGL,QADEC,QAAWC,EACb,EADaA,OAAQC,EACrB,EADqBA,gBAAiBC,EACtC,EADsCA,eAEtC,cACKJ,GADL,IAEEE,SACAC,kBACAC,uBAiC2B,SAG1BC,MAhCE,SAA0BL,EAA1B,GAA8C,IAAXC,EAAW,EAAXA,QACxC,cACKD,GADL,IAEEE,OAAQF,EAAME,OAAOI,KAAI,gBAAGC,EAAH,EAAGA,MAAH,gCAEvBA,MAAOA,EAAMC,QAAO,qBAAGC,KAAgBR,gBAwBd,SAI1BS,MAhBE,SACLV,EADK,GAGL,QADEC,QAAWU,EACb,EADaA,OAAQC,EACrB,EADqBA,SAErB,cACKZ,GADL,IAEEG,gBAAiBH,EAAMG,gBAAgBG,KAAI,SAACO,GAAD,OACzCA,EAAMJ,KAAOG,EAdnB,WAAmED,GAAQ,QAAzCJ,aAAyC,MAAjC,GAAiC,EACzE,eADyE,aACzE,IAEEA,MAAOA,EAAMC,QAAO,qBAAGC,KAAgBE,OAWbG,CAAuBD,EAAOF,GAAUE,UAKvC,GAM7B,CACEE,QAAQ,EACRb,OAAQ,GACRC,gBAAiB,GACjBC,eAAgB,KC/CpB,IAAMY,GAAUC,WAAK,kBACnB,2EAEIC,GAAcD,WAAK,kBACvB,wDAEIE,GAAWF,WAAK,kBACpB,yDAKIG,EAAS,CACbC,QAAS,IACTC,YAAa,gBAGFC,GAAoBC,qBAoCjC,QAlCY,WACV,OAAoCC,gBAApC,eAAOC,EAAP,KAAmBC,EAAnB,KAWA,OATAC,gBAAU,YACRC,UAAcC,SAAS,CAAEC,iBACzBC,SAASC,OAAOC,OAChBF,SAASC,OAAOE,YAAY,WAC5BC,OAAOJ,SAASC,OAAOI,KACpBC,UACAC,MAAK,SAACC,GAAD,OAAUA,GAAQb,EAAca,EAAKC,SAASD,KAAKE,mBAC1D,IAGD,kBAAC,IAAD,CAAcC,OAAO,MACnB,kBAACpB,EAAkBqB,SAAnB,CAA4BC,MAAO,CAAEnB,eACnC,kBAAC,EAAAoB,SAAD,CACEC,SACE,kBAAC,EAAAC,SAAD,KACE,kBAAC,EAAAC,QAAD,CAASC,KAAK,SAIlB,kBAAC,EAAAC,OAAD,KACE,kBAAC,EAAAC,MAAD,CAAOC,OAAK,EAACC,KAAMlC,EAAOC,QAASkC,UAAWvC,IAC9C,kBAAC,EAAAoC,MAAD,CAAOC,OAAK,EAACC,KAAMlC,EAAOoC,YAAaD,UAAWvC,IAClD,kBAAC,EAAAoC,MAAD,CAAOC,OAAK,EAACC,KAAMlC,EAAOE,YAAaiC,UAAWrC,IAClD,kBAAC,EAAAkC,MAAD,CAAOE,KAAK,IAAIC,UAAWpC,U,gEC3DhC,IAAMpB,EAAY,YACZM,EAAqB,qBACrBK,EAA6B,8B,gDCItC+C,EACAC,E,4DAEG,SAASxB,IACduB,EAAqB,IAAIE,IADS,2BAAZC,EAAY,yBAAZA,EAAY,gBAUlC,OARAF,GAAW7B,QAAY,GAAD,CACpB4B,EAAmBI,gBACnBC,MACAC,WAHoB,eAIjBH,EAAWpD,QAAO,SAACwD,GAAD,MAA0B,mBAATA,SAG/BlC,SAAS,CAAEmC,cAAeC,OAC5BR","file":"js/695.9eabf40837617f896ac4.js","sourcesContent":["import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport {\n  LOAD_DATA,\n  REMOVE_ESTATE_TILE,\n  REMOVE_RECOMMENDATION_TILE,\n} from './action-types';\n\n/**\n * This is here temporarily to quickly store and use content data before we optimize and split it\n */\nexport function loadAllContent(\n  state,\n  { payload: { estate, recommendations, configTryLearn } }\n) {\n  return {\n    ...state,\n    estate,\n    recommendations,\n    configTryLearn,\n  };\n}\n\nexport function removeEstateTile(state, { payload }) {\n  return {\n    ...state,\n    estate: state.estate.map(({ items, ...rest }) => ({\n      ...rest,\n      items: items.filter(({ id }) => id !== payload),\n    })),\n  };\n}\n\nfunction removeTileFromSections({ items = [], ...recommendation }, tileId) {\n  return {\n    ...recommendation,\n    items: items.filter(({ id }) => id !== tileId),\n  };\n}\n\nexport function removeRecommendationTile(\n  state,\n  { payload: { tileId, category } }\n) {\n  return {\n    ...state,\n    recommendations: state.recommendations.map((group) =>\n      group.id === category ? removeTileFromSections(group, tileId) : group\n    ),\n  };\n}\n\nexport default applyReducerHash(\n  {\n    [LOAD_DATA]: loadAllContent,\n    [REMOVE_ESTATE_TILE]: removeEstateTile,\n    [REMOVE_RECOMMENDATION_TILE]: removeRecommendationTile,\n  },\n  {\n    loaded: false,\n    estate: [],\n    recommendations: [],\n    configTryLearn: [],\n  }\n);\n","import React, {\n  useEffect,\n  useState,\n  createContext,\n  lazy,\n  Suspense,\n} from 'react';\nimport '@patternfly/patternfly/utilities/Text/text.css';\nimport { Switch, Route } from 'react-router-dom';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport { IntlProvider } from 'react-intl';\nimport contentStore from './store/contentReducer';\n\nconst Landing = lazy(() =>\n  import(/* webpackCunkName: \"Landing\" */ './routes/Landing')\n);\nconst Maintenance = lazy(() =>\n  import(/* webpackCunkName: \"Maintenance\" */ './routes/Maintenance')\n);\nconst NotFound = lazy(() =>\n  import(/* webpackCunkName: \"NotFound\" */ './routes/404')\n);\n\nimport './App.scss';\n\nconst routes = {\n  landing: '/',\n  maintenance: '/maintenance',\n};\n\nexport const PermissionContext = createContext();\n\nconst App = () => {\n  const [isOrgAdmin, setIsOrgAdmin] = useState();\n\n  useEffect(() => {\n    getRegistry().register({ contentStore });\n    insights.chrome.init();\n    insights.chrome.identifyApp('landing');\n    window.insights.chrome.auth\n      .getUser()\n      .then((user) => user && setIsOrgAdmin(user.identity.user.is_org_admin));\n  }, []);\n\n  return (\n    <IntlProvider locale=\"en\">\n      <PermissionContext.Provider value={{ isOrgAdmin }}>\n        <Suspense\n          fallback={\n            <Bullseye>\n              <Spinner size=\"xl\" />\n            </Bullseye>\n          }\n        >\n          <Switch>\n            <Route exact path={routes.landing} component={Landing} />\n            <Route exact path={routes.landingBeta} component={Landing} />\n            <Route exact path={routes.maintenance} component={Maintenance} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </Suspense>\n      </PermissionContext.Provider>\n    </IntlProvider>\n  );\n};\n\nexport default App;\n","export const LOAD_DATA = 'LOAD_DATA';\nexport const REMOVE_ESTATE_TILE = 'REMOVE_ESTATE_TILE';\nexport const REMOVE_RECOMMENDATION_TILE = 'REMOVE_RECOMMENDATION_TILE';\n","import MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport promiseMiddleware from 'redux-promise-middleware';\n\nlet middlewareListener;\nlet registry;\n\nexport function init(...middleware) {\n  middlewareListener = new MiddlewareListener();\n  registry = getRegistry({}, [\n    middlewareListener.getMiddleware(),\n    promiseMiddleware,\n    notificationsMiddleware(),\n    ...middleware.filter((item) => typeof item === 'function'),\n  ]);\n\n  registry.register({ notifications: notificationsReducer });\n  return registry;\n}\n\nexport function addNewListener({ actionType, callback }) {\n  return middlewareListener.addNew({\n    on: actionType,\n    callback,\n  });\n}\n"],"sourceRoot":""}