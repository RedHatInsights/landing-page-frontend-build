{"version":3,"file":"js/492.e72d3592209a1b3f3bf6.js","mappings":"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","sources":["webpack:///./src/store/index.js","webpack:///./src/store/contentReducer.js","webpack:///./src/store/action-types.js","webpack:///./src/App.js","webpack:///./src/moduleEntries/AppEntry.js","webpack:///./src/moduledBootstraps/bootstrap.js"],"sourcesContent":["import MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport promiseMiddleware from 'redux-promise-middleware';\n\nlet middlewareListener;\nlet registry;\n\nexport function init(...middleware) {\n  middlewareListener = new MiddlewareListener();\n  registry = getRegistry({}, [\n    middlewareListener.getMiddleware(),\n    promiseMiddleware,\n    notificationsMiddleware(),\n    ...middleware.filter((item) => typeof item === 'function'),\n  ]);\n\n  registry.register({ notifications: notificationsReducer });\n  return registry;\n}\n\nexport function addNewListener({ actionType, callback }) {\n  return middlewareListener.addNew({\n    on: actionType,\n    callback,\n  });\n}\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport {\n  LOAD_DATA,\n  REMOVE_ESTATE_TILE,\n  REMOVE_RECOMMENDATION_TILE,\n} from './action-types';\n\n/**\n * This is here temporarily to quickly store and use content data before we optimize and split it\n */\nexport function loadAllContent(\n  state,\n  { payload: { estate, recommendations, configTryLearn } }\n) {\n  return {\n    ...state,\n    estate,\n    recommendations,\n    configTryLearn,\n  };\n}\n\nexport function removeEstateTile(state, { payload }) {\n  return {\n    ...state,\n    estate: state.estate.map(({ items, ...rest }) => ({\n      ...rest,\n      items: items.filter(({ id }) => id !== payload),\n    })),\n  };\n}\n\nfunction removeTileFromSections({ items = [], ...recommendation }, tileId) {\n  return {\n    ...recommendation,\n    items: items.filter(({ id }) => id !== tileId),\n  };\n}\n\nexport function removeRecommendationTile(\n  state,\n  { payload: { tileId, category } }\n) {\n  return {\n    ...state,\n    recommendations: {\n      ...state.recommendations,\n      [category]: removeTileFromSections(\n        state.recommendations[category],\n        tileId\n      ),\n    },\n  };\n}\n\nexport default applyReducerHash(\n  {\n    [LOAD_DATA]: loadAllContent,\n    [REMOVE_ESTATE_TILE]: removeEstateTile,\n    [REMOVE_RECOMMENDATION_TILE]: removeRecommendationTile,\n  },\n  {\n    loaded: false,\n    estate: [],\n    recommendations: [],\n    configTryLearn: [],\n  }\n);\n","export const LOAD_DATA = 'LOAD_DATA';\nexport const REMOVE_ESTATE_TILE = 'REMOVE_ESTATE_TILE';\nexport const REMOVE_RECOMMENDATION_TILE = 'REMOVE_RECOMMENDATION_TILE';\n","import React, {\n  Suspense,\n  createContext,\n  lazy,\n  useEffect,\n  useState,\n} from 'react';\nimport '@patternfly/patternfly/utilities/Text/text.css';\nimport { Route, Routes } from 'react-router-dom';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport { IntlProvider } from 'react-intl';\nimport contentStore from './store/contentReducer';\n\nconst Landing = lazy(() =>\n  import(/* webpackCunkName: \"Landing\" */ './routes/Landing')\n);\nconst Maintenance = lazy(() =>\n  import(/* webpackCunkName: \"Maintenance\" */ './routes/Maintenance')\n);\nconst NotFound = lazy(() =>\n  import(/* webpackCunkName: \"NotFound\" */ './routes/404')\n);\n\nconst routes = {\n  landing: '/',\n  maintenance: '/maintenance',\n};\n\nexport const PermissionContext = createContext();\n\nconst App = () => {\n  const [isOrgAdmin, setIsOrgAdmin] = useState();\n  const chrome = useChrome();\n\n  chrome?.updateDocumentTitle?.('Hybrid Cloud Console Home', false);\n\n  useEffect(() => {\n    getRegistry().register({ contentStore });\n    chrome.auth\n      .getUser()\n      .then((user) => user && setIsOrgAdmin(user.identity.user.is_org_admin));\n  }, []);\n\n  return (\n    <IntlProvider locale=\"en\">\n      <PermissionContext.Provider value={{ isOrgAdmin }}>\n        <Suspense\n          fallback={\n            <Bullseye>\n              <Spinner size=\"xl\" />\n            </Bullseye>\n          }\n        >\n          <Routes>\n            <Route path={routes.landing} element={<Landing />} />\n            <Route path={routes.maintenance} element={<Maintenance />} />\n            <Route path=\"*\" element={<NotFound />} />\n          </Routes>\n        </Suspense>\n      </PermissionContext.Provider>\n    </IntlProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { init } from '../store';\nimport App from '../App';\nimport PropTypes from 'prop-types';\n\nconst pathName = window.location.pathname.split('/');\npathName.shift();\n\nconst AppRoot = ({ logger }) => (\n  <Provider store={init(logger).getStore()}>\n    <React.Fragment>\n      <App />\n      <NotificationsPortal />\n    </React.Fragment>\n  </Provider>\n);\n\nAppRoot.propTypes = {\n  logger: PropTypes.func,\n};\n\nexport default AppRoot;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppEntry from '../moduleEntries/AppEntry';\n\nconst rootEl = document.getElementById('root');\n\nReactDOM.render(<AppEntry />, rootEl);\n"],"names":["middlewareListener","registry","init","MiddlewareListener","middleware","getRegistry","getMiddleware","promiseMiddleware","notificationsMiddleware","filter","item","register","notifications","notificationsReducer","removeTileFromSections","tileId","items","id","applyReducerHash","state","payload","estate","recommendations","configTryLearn","map","category","loaded","Landing","lazy","Maintenance","NotFound","PermissionContext","createContext","useState","isOrgAdmin","setIsOrgAdmin","chrome","useChrome","updateDocumentTitle","useEffect","contentStore","auth","getUser","then","user","identity","is_org_admin","locale","Provider","value","Suspense","fallback","Bullseye","Spinner","size","Routes","Route","path","element","window","location","pathname","split","shift","AppRoot","logger","store","getStore","propTypes","PropTypes","rootEl","document","getElementById","ReactDOM","AppEntry"],"sourceRoot":""}