{"version":3,"file":"js/5421.de2a69c12b961c319100.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Drawer/Drawer.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerMain.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerContent.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerContentBody.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerPanelContent.js","webpack:///./node_modules/tabbable/dist/index.esm.js","webpack:///./node_modules/focus-trap/dist/focus-trap.esm.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/FocusTrap/FocusTrap.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/useUnmountEffect.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/GenerateId/GenerateId.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Drawer/drawer.mjs"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nexport var DrawerColorVariant;\n(function (DrawerColorVariant) {\n    DrawerColorVariant[\"default\"] = \"default\";\n    DrawerColorVariant[\"light200\"] = \"light-200\";\n    DrawerColorVariant[\"noBackground\"] = \"no-background\";\n})(DrawerColorVariant || (DrawerColorVariant = {}));\nexport const DrawerContext = React.createContext({\n    isExpanded: false,\n    isStatic: false,\n    onExpand: () => { },\n    position: 'end',\n    drawerRef: null,\n    drawerContentRef: null,\n    isInline: false\n});\nexport const Drawer = (_a) => {\n    var { className = '', children, isExpanded = false, isInline = false, isStatic = false, position = 'end', onExpand = () => { } } = _a, props = __rest(_a, [\"className\", \"children\", \"isExpanded\", \"isInline\", \"isStatic\", \"position\", \"onExpand\"]);\n    const drawerRef = React.useRef();\n    const drawerContentRef = React.useRef();\n    return (React.createElement(DrawerContext.Provider, { value: { isExpanded, isStatic, onExpand, position, drawerRef, drawerContentRef, isInline } },\n        React.createElement(\"div\", Object.assign({ className: css(styles.drawer, isExpanded && styles.modifiers.expanded, isInline && styles.modifiers.inline, isStatic && styles.modifiers.static, (position === 'left' || position === 'start') && styles.modifiers.panelLeft, position === 'bottom' && styles.modifiers.panelBottom, className), ref: drawerRef }, props), children)));\n};\nDrawer.displayName = 'Drawer';\n//# sourceMappingURL=Drawer.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nexport const DrawerMain = (_a) => {\n    var { \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    className = '', children } = _a, props = __rest(_a, [\"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.drawerMain, className) }, props), children));\n};\nDrawerMain.displayName = 'DrawerMain';\n//# sourceMappingURL=DrawerMain.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nimport { DrawerMain } from './DrawerMain';\nimport { DrawerColorVariant, DrawerContext } from './Drawer';\nexport const DrawerContent = (_a) => {\n    var { \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    className = '', children, panelContent, colorVariant = DrawerColorVariant.default } = _a, props = __rest(_a, [\"className\", \"children\", \"panelContent\", \"colorVariant\"]);\n    const { drawerContentRef } = React.useContext(DrawerContext);\n    return (React.createElement(DrawerMain, null,\n        React.createElement(\"div\", Object.assign({ className: css(styles.drawerContent, colorVariant === DrawerColorVariant.light200 && styles.modifiers.light_200, colorVariant === DrawerColorVariant.noBackground && styles.modifiers.noBackground, className), ref: drawerContentRef }, props), children),\n        panelContent));\n};\nDrawerContent.displayName = 'DrawerContent';\n//# sourceMappingURL=DrawerContent.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nexport const DrawerContentBody = (_a) => {\n    var { \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    className = '', children, hasPadding = false } = _a, props = __rest(_a, [\"className\", \"children\", \"hasPadding\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.drawerBody, hasPadding && styles.modifiers.padding, className) }, props), children));\n};\nDrawerContentBody.displayName = 'DrawerContentBody';\n//# sourceMappingURL=DrawerContentBody.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nimport { DrawerColorVariant, DrawerContext } from './Drawer';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nimport { FocusTrap } from '../../helpers/FocusTrap/FocusTrap';\nlet isResizing = null;\nlet newSize = 0;\nexport const DrawerPanelContent = (_a) => {\n    var { className = '', id, children, hasNoBorder = false, isResizable = false, onResize, minSize, defaultSize, maxSize, increment = 5, resizeAriaLabel = 'Resize', widths, colorVariant = DrawerColorVariant.default, focusTrap } = _a, props = __rest(_a, [\"className\", \"id\", \"children\", \"hasNoBorder\", \"isResizable\", \"onResize\", \"minSize\", \"defaultSize\", \"maxSize\", \"increment\", \"resizeAriaLabel\", \"widths\", \"colorVariant\", \"focusTrap\"]);\n    const panel = React.useRef();\n    const splitterRef = React.useRef();\n    const [separatorValue, setSeparatorValue] = React.useState(0);\n    const { position, isExpanded, isStatic, onExpand, drawerRef, drawerContentRef, isInline } = React.useContext(DrawerContext);\n    const hidden = isStatic ? false : !isExpanded;\n    const [isExpandedInternal, setIsExpandedInternal] = React.useState(!hidden);\n    const [isFocusTrapActive, setIsFocusTrapActive] = React.useState(false);\n    const previouslyFocusedElement = React.useRef(null);\n    let currWidth = 0;\n    let panelRect;\n    let end;\n    let start;\n    let bottom;\n    let setInitialVals = true;\n    if (isStatic && (focusTrap === null || focusTrap === void 0 ? void 0 : focusTrap.enabled)) {\n        // eslint-disable-next-line no-console\n        console.warn(`DrawerPanelContent: The focusTrap.enabled prop cannot be true if the Drawer's isStatic prop is true. This will cause a permanent focus trap.`);\n    }\n    React.useEffect(() => {\n        if (!isStatic && isExpanded) {\n            setIsExpandedInternal(isExpanded);\n        }\n    }, [isStatic, isExpanded]);\n    const calcValueNow = () => {\n        let splitterPos;\n        let drawerSize;\n        const isRTL = window.getComputedStyle(panel.current).getPropertyValue('direction') === 'rtl';\n        if (isInline && (position === 'end' || position === 'right')) {\n            if (isRTL) {\n                splitterPos = panel.current.getBoundingClientRect().left - splitterRef.current.getBoundingClientRect().right;\n                drawerSize = drawerRef.current.getBoundingClientRect().left - drawerRef.current.getBoundingClientRect().right;\n            }\n            else {\n                splitterPos = panel.current.getBoundingClientRect().right - splitterRef.current.getBoundingClientRect().left;\n                drawerSize = drawerRef.current.getBoundingClientRect().right - drawerRef.current.getBoundingClientRect().left;\n            }\n        }\n        else if (isInline && (position === 'start' || position === 'left')) {\n            if (isRTL) {\n                splitterPos = splitterRef.current.getBoundingClientRect().left - panel.current.getBoundingClientRect().right;\n                drawerSize = drawerRef.current.getBoundingClientRect().left - drawerRef.current.getBoundingClientRect().right;\n            }\n            else {\n                splitterPos = splitterRef.current.getBoundingClientRect().right - panel.current.getBoundingClientRect().left;\n                drawerSize = drawerRef.current.getBoundingClientRect().right - drawerRef.current.getBoundingClientRect().left;\n            }\n        }\n        else if (position === 'end' || position === 'right') {\n            if (isRTL) {\n                splitterPos =\n                    drawerContentRef.current.getBoundingClientRect().left - splitterRef.current.getBoundingClientRect().right;\n                drawerSize =\n                    drawerContentRef.current.getBoundingClientRect().left -\n                        drawerContentRef.current.getBoundingClientRect().right;\n            }\n            else {\n                splitterPos =\n                    drawerContentRef.current.getBoundingClientRect().right - splitterRef.current.getBoundingClientRect().left;\n                drawerSize =\n                    drawerContentRef.current.getBoundingClientRect().right -\n                        drawerContentRef.current.getBoundingClientRect().left;\n            }\n        }\n        else if (position === 'start' || position === 'left') {\n            if (isRTL) {\n                splitterPos =\n                    splitterRef.current.getBoundingClientRect().left - drawerContentRef.current.getBoundingClientRect().right;\n                drawerSize =\n                    drawerContentRef.current.getBoundingClientRect().left -\n                        drawerContentRef.current.getBoundingClientRect().right;\n            }\n            else {\n                splitterPos =\n                    splitterRef.current.getBoundingClientRect().right - drawerContentRef.current.getBoundingClientRect().left;\n                drawerSize =\n                    drawerContentRef.current.getBoundingClientRect().right -\n                        drawerContentRef.current.getBoundingClientRect().left;\n            }\n        }\n        else if (position === 'bottom') {\n            splitterPos =\n                drawerContentRef.current.getBoundingClientRect().bottom - splitterRef.current.getBoundingClientRect().top;\n            drawerSize =\n                drawerContentRef.current.getBoundingClientRect().bottom - drawerContentRef.current.getBoundingClientRect().top;\n        }\n        const newSplitterPos = (splitterPos / drawerSize) * 100;\n        return Math.round((newSplitterPos + Number.EPSILON) * 100) / 100;\n    };\n    const handleTouchStart = (e) => {\n        e.stopPropagation();\n        document.addEventListener('touchmove', callbackTouchMove, { passive: false });\n        document.addEventListener('touchend', callbackTouchEnd);\n        isResizing = true;\n    };\n    const handleMousedown = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        document.addEventListener('mousemove', callbackMouseMove);\n        document.addEventListener('mouseup', callbackMouseUp);\n        drawerRef.current.classList.add(css(styles.modifiers.resizing));\n        isResizing = true;\n        setInitialVals = true;\n    };\n    const handleMouseMove = (e) => {\n        const mousePos = position === 'bottom' ? e.clientY : e.clientX;\n        handleControlMove(e, mousePos);\n    };\n    const handleTouchMove = (e) => {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        const touchPos = position === 'bottom' ? e.touches[0].clientY : e.touches[0].clientX;\n        handleControlMove(e, touchPos);\n    };\n    const handleControlMove = (e, controlPosition) => {\n        const isRTL = window.getComputedStyle(panel.current).getPropertyValue('direction') === 'rtl';\n        e.stopPropagation();\n        if (!isResizing) {\n            return;\n        }\n        if (setInitialVals) {\n            panelRect = panel.current.getBoundingClientRect();\n            if (isRTL) {\n                start = panelRect.right;\n                end = panelRect.left;\n            }\n            else {\n                end = panelRect.right;\n                start = panelRect.left;\n            }\n            bottom = panelRect.bottom;\n            setInitialVals = false;\n        }\n        const mousePos = controlPosition;\n        let newSize = 0;\n        if (position === 'end' || position === 'right') {\n            newSize = isRTL ? mousePos - end : end - mousePos;\n        }\n        else if (position === 'start' || position === 'left') {\n            newSize = isRTL ? start - mousePos : mousePos - start;\n        }\n        else {\n            newSize = bottom - mousePos;\n        }\n        if (position === 'bottom') {\n            panel.current.style.overflowAnchor = 'none';\n        }\n        panel.current.style.setProperty('--pf-v5-c-drawer__panel--md--FlexBasis', newSize + 'px');\n        currWidth = newSize;\n        setSeparatorValue(calcValueNow());\n    };\n    const handleMouseup = (e) => {\n        if (!isResizing) {\n            return;\n        }\n        drawerRef.current.classList.remove(css(styles.modifiers.resizing));\n        isResizing = false;\n        onResize && onResize(e, currWidth, id);\n        setInitialVals = true;\n        document.removeEventListener('mousemove', callbackMouseMove);\n        document.removeEventListener('mouseup', callbackMouseUp);\n    };\n    const handleTouchEnd = (e) => {\n        e.stopPropagation();\n        if (!isResizing) {\n            return;\n        }\n        isResizing = false;\n        onResize && onResize(e, currWidth, id);\n        document.removeEventListener('touchmove', callbackTouchMove);\n        document.removeEventListener('touchend', callbackTouchEnd);\n    };\n    const callbackMouseMove = React.useCallback(handleMouseMove, []);\n    const callbackTouchEnd = React.useCallback(handleTouchEnd, []);\n    const callbackTouchMove = React.useCallback(handleTouchMove, []);\n    const callbackMouseUp = React.useCallback(handleMouseup, []);\n    const handleKeys = (e) => {\n        const isRTL = window.getComputedStyle(panel.current).getPropertyValue('direction') === 'rtl';\n        const key = e.key;\n        if (key !== 'Escape' &&\n            key !== 'Enter' &&\n            key !== 'ArrowUp' &&\n            key !== 'ArrowDown' &&\n            key !== 'ArrowLeft' &&\n            key !== 'ArrowRight') {\n            if (isResizing) {\n                e.preventDefault();\n            }\n            return;\n        }\n        e.preventDefault();\n        if (key === 'Escape' || key === 'Enter') {\n            onResize && onResize(e, currWidth, id);\n        }\n        const panelRect = panel.current.getBoundingClientRect();\n        newSize = position === 'bottom' ? panelRect.height : panelRect.width;\n        let delta = 0;\n        if (key === 'ArrowRight') {\n            if (isRTL) {\n                delta = position === 'left' || position === 'start' ? -increment : increment;\n            }\n            else {\n                delta = position === 'left' || position === 'start' ? increment : -increment;\n            }\n        }\n        else if (key === 'ArrowLeft') {\n            if (isRTL) {\n                delta = position === 'left' || position === 'start' ? increment : -increment;\n            }\n            else {\n                delta = position === 'left' || position === 'start' ? -increment : increment;\n            }\n        }\n        else if (key === 'ArrowUp') {\n            delta = increment;\n        }\n        else if (key === 'ArrowDown') {\n            delta = -increment;\n        }\n        newSize = newSize + delta;\n        if (position === 'bottom') {\n            panel.current.style.overflowAnchor = 'none';\n        }\n        panel.current.style.setProperty('--pf-v5-c-drawer__panel--md--FlexBasis', newSize + 'px');\n        currWidth = newSize;\n        setSeparatorValue(calcValueNow());\n    };\n    const boundaryCssVars = {};\n    if (defaultSize) {\n        boundaryCssVars['--pf-v5-c-drawer__panel--md--FlexBasis'] = defaultSize;\n    }\n    if (minSize) {\n        boundaryCssVars['--pf-v5-c-drawer__panel--md--FlexBasis--min'] = minSize;\n    }\n    if (maxSize) {\n        boundaryCssVars['--pf-v5-c-drawer__panel--md--FlexBasis--max'] = maxSize;\n    }\n    const isValidFocusTrap = (focusTrap === null || focusTrap === void 0 ? void 0 : focusTrap.enabled) && !isStatic;\n    const Component = isValidFocusTrap ? FocusTrap : 'div';\n    return (React.createElement(GenerateId, { prefix: \"pf-drawer-panel-\" }, (panelId) => {\n        const focusTrapProps = {\n            tabIndex: -1,\n            'aria-modal': true,\n            role: 'dialog',\n            active: isFocusTrapActive,\n            'aria-labelledby': (focusTrap === null || focusTrap === void 0 ? void 0 : focusTrap['aria-labelledby']) || id || panelId,\n            focusTrapOptions: {\n                fallbackFocus: () => panel.current,\n                onActivate: () => {\n                    if (previouslyFocusedElement.current !== document.activeElement) {\n                        previouslyFocusedElement.current = document.activeElement;\n                    }\n                },\n                onDeactivate: () => {\n                    previouslyFocusedElement.current &&\n                        previouslyFocusedElement.current.focus &&\n                        previouslyFocusedElement.current.focus();\n                },\n                clickOutsideDeactivates: true,\n                returnFocusOnDeactivate: false,\n                // FocusTrap's initialFocus can accept false as a value to prevent initial focus.\n                // We want to prevent this in case false is ever passed in.\n                initialFocus: (focusTrap === null || focusTrap === void 0 ? void 0 : focusTrap.elementToFocusOnExpand) || undefined,\n                escapeDeactivates: false\n            }\n        };\n        return (React.createElement(Component, Object.assign({}, (isValidFocusTrap && focusTrapProps), { id: id || panelId, className: css(styles.drawerPanel, isResizable && styles.modifiers.resizable, hasNoBorder && styles.modifiers.noBorder, formatBreakpointMods(widths, styles), colorVariant === DrawerColorVariant.light200 && styles.modifiers.light_200, colorVariant === DrawerColorVariant.noBackground && styles.modifiers.noBackground, className), onTransitionEnd: (ev) => {\n                if (ev.target === panel.current) {\n                    if (!hidden && ev.nativeEvent.propertyName === 'transform') {\n                        onExpand(ev);\n                    }\n                    setIsExpandedInternal(!hidden);\n                    if (isValidFocusTrap && ev.nativeEvent.propertyName === 'transform') {\n                        setIsFocusTrapActive((prevIsFocusTrapActive) => !prevIsFocusTrapActive);\n                    }\n                }\n            }, hidden: hidden }, ((defaultSize || minSize || maxSize) && {\n            style: boundaryCssVars\n        }), props, { ref: panel }), isExpandedInternal && (React.createElement(React.Fragment, null,\n            isResizable && (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { className: css(styles.drawerSplitter, position !== 'bottom' && styles.modifiers.vertical), role: \"separator\", tabIndex: 0, \"aria-orientation\": position === 'bottom' ? 'horizontal' : 'vertical', \"aria-label\": resizeAriaLabel, \"aria-valuenow\": separatorValue, \"aria-valuemin\": 0, \"aria-valuemax\": 100, \"aria-controls\": id || panelId, onMouseDown: handleMousedown, onKeyDown: handleKeys, onTouchStart: handleTouchStart, ref: splitterRef },\n                    React.createElement(\"div\", { className: css(styles.drawerSplitterHandle), \"aria-hidden\": true })),\n                React.createElement(\"div\", { className: css(styles.drawerPanelMain) }, children))),\n            !isResizable && children))));\n    }));\n};\nDrawerPanelContent.displayName = 'DrawerPanelContent';\n//# sourceMappingURL=DrawerPanelContent.js.map","/*!\n* tabbable 6.2.0\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\n// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nvar candidateSelectors = ['input:not([inert])', 'select:not([inert])', 'textarea:not([inert])', 'a[href]:not([inert])', 'button:not([inert])', '[tabindex]:not(slot):not([inert])', 'audio[controls]:not([inert])', 'video[controls]:not([inert])', '[contenteditable]:not([contenteditable=\"false\"]):not([inert])', 'details>summary:first-of-type:not([inert])', 'details:not([inert])'];\nvar candidateSelector = /* #__PURE__ */candidateSelectors.join(',');\nvar NoElement = typeof Element === 'undefined';\nvar matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\nvar getRootNode = !NoElement && Element.prototype.getRootNode ? function (element) {\n  var _element$getRootNode;\n  return element === null || element === void 0 ? void 0 : (_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element);\n} : function (element) {\n  return element === null || element === void 0 ? void 0 : element.ownerDocument;\n};\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nvar isInert = function isInert(node, lookUp) {\n  var _node$getAttribute;\n  if (lookUp === void 0) {\n    lookUp = true;\n  }\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  var inertAtt = node === null || node === void 0 ? void 0 : (_node$getAttribute = node.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node, 'inert');\n  var inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  var result = inert || lookUp && node && isInert(node.parentNode); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nvar isContentEditable = function isContentEditable(node) {\n  var _node$getAttribute2;\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  var attValue = node === null || node === void 0 ? void 0 : (_node$getAttribute2 = node.getAttribute) === null || _node$getAttribute2 === void 0 ? void 0 : _node$getAttribute2.call(node, 'contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nvar getCandidates = function getCandidates(el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nvar getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {\n  var candidates = [];\n  var elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    var element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      var assigned = element.assignedElements();\n      var content = assigned.length ? assigned : element.children;\n      var nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push.apply(candidates, nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates\n        });\n      }\n    } else {\n      // check candidate element\n      var validCandidate = matches.call(element, candidateSelector);\n      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      var shadowRoot = element.shadowRoot ||\n      // check for an undisclosed shadow\n      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      var validShadowRoot = !isInert(shadowRoot, false) && (!options.shadowRootFilter || options.shadowRootFilter(element));\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);\n        if (options.flatten) {\n          candidates.push.apply(candidates, _nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: _nestedCandidates\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift.apply(elementsToCheck, element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\n/**\n * @private\n * Determines if the node has an explicitly specified `tabindex` attribute.\n * @param {HTMLElement} node\n * @returns {boolean} True if so; false if not.\n */\nvar hasTabIndex = function hasTabIndex(node) {\n  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));\n};\n\n/**\n * Determine the tab index of a given node.\n * @param {HTMLElement} node\n * @returns {number} Tab order (negative, 0, or positive number).\n * @throws {Error} If `node` is falsy.\n */\nvar getTabIndex = function getTabIndex(node) {\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    if ((/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || isContentEditable(node)) && !hasTabIndex(node)) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n};\n\n/**\n * Determine the tab index of a given node __for sort order purposes__.\n * @param {HTMLElement} node\n * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,\n *  has tabIndex -1, but needs to be sorted by document order in order for its content to be\n *  inserted into the correct sort position.\n * @returns {number} Tab order (negative, 0, or positive number).\n */\nvar getSortOrderTabIndex = function getSortOrderTabIndex(node, isScope) {\n  var tabIndex = getTabIndex(node);\n  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {\n    return 0;\n  }\n  return tabIndex;\n};\nvar sortOrderedTabbables = function sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\nvar isInput = function isInput(node) {\n  return node.tagName === 'INPUT';\n};\nvar isHiddenInput = function isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n};\nvar isDetailsWithSummary = function isDetailsWithSummary(node) {\n  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === 'SUMMARY';\n  });\n  return r;\n};\nvar getCheckedRadio = function getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\nvar isTabbableRadio = function isTabbableRadio(node) {\n  if (!node.name) {\n    return true;\n  }\n  var radioScope = node.form || getRootNode(node);\n  var queryRadios = function queryRadios(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n  var radioSet;\n  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);\n      return false;\n    }\n  }\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\nvar isRadio = function isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n};\nvar isNonTabbableRadio = function isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nvar isNodeAttached = function isNodeAttached(node) {\n  var _nodeRoot;\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  var nodeRoot = node && getRootNode(node);\n  var nodeRootHost = (_nodeRoot = nodeRoot) === null || _nodeRoot === void 0 ? void 0 : _nodeRoot.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  var attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    var _nodeRootHost, _nodeRootHost$ownerDo, _node$ownerDocument;\n    attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && (_nodeRootHost$ownerDo = _nodeRootHost.ownerDocument) !== null && _nodeRootHost$ownerDo !== void 0 && _nodeRootHost$ownerDo.contains(nodeRootHost) || node !== null && node !== void 0 && (_node$ownerDocument = node.ownerDocument) !== null && _node$ownerDocument !== void 0 && _node$ownerDocument.contains(node));\n    while (!attached && nodeRootHost) {\n      var _nodeRoot2, _nodeRootHost2, _nodeRootHost2$ownerD;\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = (_nodeRoot2 = nodeRoot) === null || _nodeRoot2 === void 0 ? void 0 : _nodeRoot2.host;\n      attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && (_nodeRootHost2$ownerD = _nodeRootHost2.ownerDocument) !== null && _nodeRootHost2$ownerD !== void 0 && _nodeRootHost2$ownerD.contains(nodeRootHost));\n    }\n  }\n  return attached;\n};\nvar isZeroArea = function isZeroArea(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n    width = _node$getBoundingClie.width,\n    height = _node$getBoundingClie.height;\n  return width === 0 && height === 0;\n};\nvar isHidden = function isHidden(node, _ref) {\n  var displayCheck = _ref.displayCheck,\n    getShadowRoot = _ref.getShadowRoot;\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n  if (!displayCheck || displayCheck === 'full' || displayCheck === 'legacy-full') {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      var originalNode = node;\n      while (node) {\n        var parentElement = node.parentElement;\n        var rootNode = getRootNode(node);\n        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nvar isDisabledFromFieldset = function isDisabledFromFieldset(node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    var parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {\n  if (node.disabled ||\n  // we must do an inert look up to filter out any elements inside an inert ancestor\n  //  because we're limited in the type of selectors we can use in JSDom (see related\n  //  note related to `candidateSelectors`)\n  isInert(node) || isHiddenInput(node) || isHidden(node, options) ||\n  // For a details element with a summary, the summary element gets the focus\n  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n  return true;\n};\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {\n  if (isNonTabbableRadio(node) || getTabIndex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {\n    return false;\n  }\n  return true;\n};\nvar isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {\n  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nvar sortByOrder = function sortByOrder(candidates) {\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    var isScope = !!item.scopeParent;\n    var element = isScope ? item.scopeParent : item;\n    var candidateTabindex = getSortOrderTabIndex(element, isScope);\n    var elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements\n      });\n    }\n  });\n  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {\n    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);\n    return acc;\n  }, []).concat(regularTabbables);\n};\nvar tabbable = function tabbable(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  }\n  return sortByOrder(candidates);\n};\nvar focusable = function focusable(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  }\n  return candidates;\n};\nvar isTabbable = function isTabbable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\nvar focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');\nvar isFocusable = function isFocusable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { focusable, getTabIndex, isFocusable, isTabbable, tabbable };\n//# sourceMappingURL=index.esm.js.map\n","/*!\n* focus-trap 7.5.2\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\nimport { isFocusable, tabbable, focusable, isTabbable, getTabIndex } from 'tabbable';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nvar activeFocusTraps = {\n  activateTrap: function activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      var activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap.pause();\n      }\n    }\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      // move this existing trap to the front of the queue\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n  deactivateTrap: function deactivateTrap(trapStack, trap) {\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n    if (trapStack.length > 0) {\n      trapStack[trapStack.length - 1].unpause();\n    }\n  }\n};\nvar isSelectableInput = function isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n};\nvar isEscapeEvent = function isEscapeEvent(e) {\n  return (e === null || e === void 0 ? void 0 : e.key) === 'Escape' || (e === null || e === void 0 ? void 0 : e.key) === 'Esc' || (e === null || e === void 0 ? void 0 : e.keyCode) === 27;\n};\nvar isTabEvent = function isTabEvent(e) {\n  return (e === null || e === void 0 ? void 0 : e.key) === 'Tab' || (e === null || e === void 0 ? void 0 : e.keyCode) === 9;\n};\n\n// checks for TAB by default\nvar isKeyForward = function isKeyForward(e) {\n  return isTabEvent(e) && !e.shiftKey;\n};\n\n// checks for SHIFT+TAB by default\nvar isKeyBackward = function isKeyBackward(e) {\n  return isTabEvent(e) && e.shiftKey;\n};\nvar delay = function delay(fn) {\n  return setTimeout(fn, 0);\n};\n\n// Array.find/findIndex() are not supported on IE; this replicates enough\n//  of Array.findIndex() for our needs\nvar findIndex = function findIndex(arr, fn) {\n  var idx = -1;\n  arr.every(function (value, i) {\n    if (fn(value)) {\n      idx = i;\n      return false; // break\n    }\n\n    return true; // next\n  });\n\n  return idx;\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nvar valueOrHandler = function valueOrHandler(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n  return typeof value === 'function' ? value.apply(void 0, params) : value;\n};\nvar getActualTarget = function getActualTarget(event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;\n};\n\n// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this\n//  current instance use the same stack if `userOptions.trapStack` isn't specified\nvar internalTrapStack = [];\nvar createFocusTrap = function createFocusTrap(elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;\n  var trapStack = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.trapStack) || internalTrapStack;\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    isKeyForward: isKeyForward,\n    isKeyBackward: isKeyBackward\n  }, userOptions);\n  var state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   posTabIndexesFound: boolean,\n    //   firstTabbableNode: HTMLElement|undefined,\n    //   lastTabbableNode: HTMLElement|undefined,\n    //   firstDomTabbableNode: HTMLElement|undefined,\n    //   lastDomTabbableNode: HTMLElement|undefined,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [],\n    // same order/length as `containers` list\n\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined,\n    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any\n    recentNavEvent: undefined\n  };\n  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @param {Event} [event] If available, and `element` isn't directly found in any container,\n   *  the event's composed path is used to see if includes any known trap containers in the\n   *  case where the element is inside a Shadow DOM.\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n  var findContainerIndex = function findContainerIndex(element, event) {\n    var composedPath = typeof (event === null || event === void 0 ? void 0 : event.composedPath) === 'function' ? event.composedPath() : undefined;\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(function (_ref) {\n      var container = _ref.container,\n        tabbableNodes = _ref.tabbableNodes;\n      return container.contains(element) || ( // fall back to explicit tabbable search which will take into consideration any\n      //  web components if the `tabbableOptions.getShadowRoot` option was used for\n      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n      //  look inside web components even if open)\n      composedPath === null || composedPath === void 0 ? void 0 : composedPath.includes(container)) || tabbableNodes.find(function (node) {\n        return node === element;\n      });\n    });\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @returns {undefined | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `false` if the option\n   *  resolved to `false` (node explicitly not given); otherwise, the resolved\n   *  DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node.\n   */\n  var getNodeForOption = function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    if (typeof optionValue === 'function') {\n      for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        params[_key2 - 1] = arguments[_key2];\n      }\n      optionValue = optionValue.apply(void 0, params);\n    }\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n    }\n    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      if (!node) {\n        throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n      }\n    }\n    return node;\n  };\n  var getInitialFocusNode = function getInitialFocusNode() {\n    var node = getNodeForOption('initialFocus');\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n    if (node === undefined || !isFocusable(node, config.tabbableOptions)) {\n      // option not specified nor focusable: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        var firstTabbableGroup = state.tabbableGroups[0];\n        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    }\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n    return node;\n  };\n  var updateTabbableNodes = function updateTabbableNodes() {\n    state.containerGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container, config.tabbableOptions);\n\n      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes since nodes with negative `tabindex` attributes\n      //  are focusable but not tabbable\n      var focusableNodes = focusable(container, config.tabbableOptions);\n      var firstTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[0] : undefined;\n      var lastTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : undefined;\n      var firstDomTabbableNode = focusableNodes.find(function (node) {\n        return isTabbable(node);\n      });\n      var lastDomTabbableNode = focusableNodes.slice().reverse().find(function (node) {\n        return isTabbable(node);\n      });\n      var posTabIndexesFound = !!tabbableNodes.find(function (node) {\n        return getTabIndex(node) > 0;\n      });\n      return {\n        container: container,\n        tabbableNodes: tabbableNodes,\n        focusableNodes: focusableNodes,\n        /** True if at least one node with positive `tabindex` was found in this container. */\n        posTabIndexesFound: posTabIndexesFound,\n        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */\n        firstTabbableNode: firstTabbableNode,\n        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */\n        lastTabbableNode: lastTabbableNode,\n        // NOTE: DOM order is NOT NECESSARILY \"document position\" order, but figuring that out\n        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        //  because that API doesn't work with Shadow DOM as well as it should (@see\n        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,\n        //  to address an edge case related to positive tabindex support, this seems like a much easier,\n        //  \"close enough most of the time\" alternative for positive tabindexes which should generally\n        //  be avoided anyway...\n        /** First tabbable node in container, __DOM__ order; `undefined` if none. */\n        firstDomTabbableNode: firstDomTabbableNode,\n        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */\n        lastDomTabbableNode: lastDomTabbableNode,\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode: function nextTabbableNode(node) {\n          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n          var nodeIdx = tabbableNodes.indexOf(node);\n          if (nodeIdx < 0) {\n            // either not tabbable nor focusable, or was focused but not tabbable (negative tabindex):\n            //  since `node` should at least have been focusable, we assume that's the case and mimic\n            //  what browsers do, which is set focus to the next node in __document position order__,\n            //  regardless of positive tabindexes, if any -- and for reasons explained in the NOTE\n            //  above related to `firstDomTabbable` and `lastDomTabbable` properties, we fall back to\n            //  basic DOM order\n            if (forward) {\n              return focusableNodes.slice(focusableNodes.indexOf(node) + 1).find(function (el) {\n                return isTabbable(el);\n              });\n            }\n            return focusableNodes.slice(0, focusableNodes.indexOf(node)).reverse().find(function (el) {\n              return isTabbable(el);\n            });\n          }\n          return tabbableNodes[nodeIdx + (forward ? 1 : -1)];\n        }\n      };\n    });\n    state.tabbableGroups = state.containerGroups.filter(function (group) {\n      return group.tabbableNodes.length > 0;\n    });\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');\n    }\n\n    // NOTE: Positive tabindexes are only properly supported in single-container traps because\n    //  doing it across multiple containers where tabindexes could be all over the place\n    //  would require Tabbable to support multiple containers, would require additional\n    //  specialized Shadow DOM support, and would require Tabbable's multi-container support\n    //  to look at those containers in document position order rather than user-provided\n    //  order (as they are treated in Focus-trap, for legacy reasons). See discussion on\n    //  https://github.com/focus-trap/focus-trap/issues/375 for more details.\n    if (state.containerGroups.find(function (g) {\n      return g.posTabIndexesFound;\n    }) && state.containerGroups.length > 1) {\n      throw new Error(\"At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.\");\n    }\n  };\n  var tryFocus = function tryFocus(node) {\n    if (node === false) {\n      return;\n    }\n    if (node === doc.activeElement) {\n      return;\n    }\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    // NOTE: focus() API does not trigger focusIn event so set MRU node manually\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus', previousActiveElement);\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  /**\n   * Finds the next node (in either direction) where focus should move according to a\n   *  keyboard focus-in event.\n   * @param {Object} params\n   * @param {Node} [params.target] Known target __from which__ to navigate, if any.\n   * @param {KeyboardEvent|FocusEvent} [params.event] Event to use if `target` isn't known (event\n   *  will be used to determine the `target`). Ignored if `target` is specified.\n   * @param {boolean} [params.isBackward] True if focus should move backward.\n   * @returns {Node|undefined} The next node, or `undefined` if a next node couldn't be\n   *  determined given the current state of the trap.\n   */\n  var findNextNavNode = function findNextNavNode(_ref2) {\n    var target = _ref2.target,\n      event = _ref2.event,\n      _ref2$isBackward = _ref2.isBackward,\n      isBackward = _ref2$isBackward === void 0 ? false : _ref2$isBackward;\n    target = target || getActualTarget(event);\n    updateTabbableNodes();\n    var destinationNode = null;\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      var containerIndex = findContainerIndex(target, event);\n      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back into...\n        if (isBackward) {\n          // ...the last node in the last group\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (isBackward) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        var startOfGroupIndex = findIndex(state.tabbableGroups, function (_ref3) {\n          var firstTabbableNode = _ref3.firstTabbableNode;\n          return target === firstTabbableNode;\n        });\n        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? destinationGroup.lastTabbableNode : destinationGroup.lastDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target, false);\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        var lastOfGroupIndex = findIndex(state.tabbableGroups, function (_ref4) {\n          var lastTabbableNode = _ref4.lastTabbableNode;\n          return target === lastTabbableNode;\n        });\n        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? _destinationGroup.firstTabbableNode : _destinationGroup.firstDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target);\n        }\n      }\n    } else {\n      // no groups available\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n    return destinationNode;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  var checkPointerDown = function checkPointerDown(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked (and if not focusable, to \"nothing\"); by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node), whether the\n        //  outside click was on a focusable node or not\n        returnFocus: config.returnFocusOnDeactivate\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  // NOTE: the focusIn event is NOT cancelable, so if focus escapes, it may cause unexpected\n  //  scrolling if the node that got focused was out of view; there's nothing we can do to\n  //  prevent that from happening by the time we discover that focus escaped\n  var checkFocusIn = function checkFocusIn(event) {\n    var target = getActualTarget(event);\n    var targetContained = findContainerIndex(target, event) >= 0;\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      event.stopImmediatePropagation();\n\n      // focus will escape if the MRU node had a positive tab index and user tried to nav forward;\n      //  it will also escape if the MRU node had a 0 tab index and user tried to nav backward\n      //  toward a node with a positive tab index\n      var nextNode; // next node to focus, if we find one\n      var navAcrossContainers = true;\n      if (state.mostRecentlyFocusedNode) {\n        if (getTabIndex(state.mostRecentlyFocusedNode) > 0) {\n          // MRU container index must be >=0 otherwise we wouldn't have it as an MRU node...\n          var mruContainerIdx = findContainerIndex(state.mostRecentlyFocusedNode);\n          // there MAY not be any tabbable nodes in the container if there are at least 2 containers\n          //  and the MRU node is focusable but not tabbable (focus-trap requires at least 1 container\n          //  with at least one tabbable node in order to function, so this could be the other container\n          //  with nothing tabbable in it)\n          var tabbableNodes = state.containerGroups[mruContainerIdx].tabbableNodes;\n          if (tabbableNodes.length > 0) {\n            // MRU tab index MAY not be found if the MRU node is focusable but not tabbable\n            var mruTabIdx = tabbableNodes.findIndex(function (node) {\n              return node === state.mostRecentlyFocusedNode;\n            });\n            if (mruTabIdx >= 0) {\n              if (config.isKeyForward(state.recentNavEvent)) {\n                if (mruTabIdx + 1 < tabbableNodes.length) {\n                  nextNode = tabbableNodes[mruTabIdx + 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              } else {\n                if (mruTabIdx - 1 >= 0) {\n                  nextNode = tabbableNodes[mruTabIdx - 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              }\n              // else, don't find in container order without considering direction too\n            }\n          }\n          // else, no tabbable nodes in that container (which means we must have at least one other\n          //  container with at least one tabbable node in it, otherwise focus-trap would've thrown\n          //  an error the last time updateTabbableNodes() was run): find next node among all known\n          //  containers\n        } else {\n          // check to see if there's at least one tabbable node with a positive tab index inside\n          //  the trap because focus seems to escape when navigating backward from a tabbable node\n          //  with tabindex=0 when this is the case (instead of wrapping to the tabbable node with\n          //  the greatest positive tab index like it should)\n          if (!state.containerGroups.some(function (g) {\n            return g.tabbableNodes.some(function (n) {\n              return getTabIndex(n) > 0;\n            });\n          })) {\n            // no containers with tabbable nodes with positive tab indexes which means the focus\n            //  escaped for some other reason and we should just execute the fallback to the\n            //  MRU node or initial focus node, if any\n            navAcrossContainers = false;\n          }\n        }\n      } else {\n        // no MRU node means we're likely in some initial condition when the trap has just\n        //  been activated and initial focus hasn't been given yet, in which case we should\n        //  fall through to trying to focus the initial focus node, which is what should\n        //  happen below at this point in the logic\n        navAcrossContainers = false;\n      }\n      if (navAcrossContainers) {\n        nextNode = findNextNavNode({\n          // move FROM the MRU node, not event-related node (which will be the node that is\n          //  outside the trap causing the focus escape we're trying to fix)\n          target: state.mostRecentlyFocusedNode,\n          isBackward: config.isKeyBackward(state.recentNavEvent)\n        });\n      }\n      if (nextNode) {\n        tryFocus(nextNode);\n      } else {\n        tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n      }\n    }\n    state.recentNavEvent = undefined; // clear\n  };\n\n  // Hijack key nav events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  var checkKeyNav = function checkKeyNav(event) {\n    var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    state.recentNavEvent = event;\n    var destinationNode = findNextNavNode({\n      event: event,\n      isBackward: isBackward\n    });\n    if (destinationNode) {\n      if (isTabEvent(event)) {\n        // since tab natively moves focus, we wouldn't have a destination node unless we\n        //  were on the edge of a container and had to move to the next/previous edge, in\n        //  which case we want to prevent default to keep the browser from moving focus\n        //  to where it normally would\n        event.preventDefault();\n      }\n      tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n\n  var checkKey = function checkKey(event) {\n    if (isEscapeEvent(event) && valueOrHandler(config.escapeDeactivates, event) !== false) {\n      event.preventDefault();\n      trap.deactivate();\n      return;\n    }\n    if (config.isKeyForward(event) || config.isKeyBackward(event)) {\n      checkKeyNav(event, config.isKeyBackward(event));\n    }\n  };\n  var checkClick = function checkClick(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  var addListeners = function addListeners() {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trapStack, trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      tryFocus(getInitialFocusNode());\n    }) : tryFocus(getInitialFocusNode());\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false\n    });\n    return trap;\n  };\n  var removeListeners = function removeListeners() {\n    if (!state.active) {\n      return;\n    }\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n    return trap;\n  };\n\n  //\n  // MUTATION OBSERVER\n  //\n\n  var checkDomRemoval = function checkDomRemoval(mutations) {\n    var isFocusedNodeRemoved = mutations.some(function (mutation) {\n      var removedNodes = Array.from(mutation.removedNodes);\n      return removedNodes.some(function (node) {\n        return node === state.mostRecentlyFocusedNode;\n      });\n    });\n\n    // If the currently focused is removed then browsers will move focus to the\n    // <body> element. If this happens, try to move focus back into the trap.\n    if (isFocusedNodeRemoved) {\n      tryFocus(getInitialFocusNode());\n    }\n  };\n\n  // Use MutationObserver - if supported - to detect if focused node is removed\n  // from the DOM.\n  var mutationObserver = typeof window !== 'undefined' && 'MutationObserver' in window ? new MutationObserver(checkDomRemoval) : undefined;\n  var updateObservedNodes = function updateObservedNodes() {\n    if (!mutationObserver) {\n      return;\n    }\n    mutationObserver.disconnect();\n    if (state.active && !state.paused) {\n      state.containers.map(function (container) {\n        mutationObserver.observe(container, {\n          subtree: true,\n          childList: true\n        });\n      });\n    }\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n    get paused() {\n      return state.paused;\n    },\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n      var onActivate = getOption(activateOptions, 'onActivate');\n      var onPostActivate = getOption(activateOptions, 'onPostActivate');\n      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n      onActivate === null || onActivate === void 0 ? void 0 : onActivate();\n      var finishActivation = function finishActivation() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        updateObservedNodes();\n        onPostActivate === null || onPostActivate === void 0 ? void 0 : onPostActivate();\n      };\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n      var options = _objectSpread2({\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus\n      }, deactivateOptions);\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      updateObservedNodes();\n      activeFocusTraps.deactivateTrap(trapStack, trap);\n      var onDeactivate = getOption(options, 'onDeactivate');\n      var onPostDeactivate = getOption(options, 'onPostDeactivate');\n      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');\n      onDeactivate === null || onDeactivate === void 0 ? void 0 : onDeactivate();\n      var finishDeactivation = function finishDeactivation() {\n        delay(function () {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          onPostDeactivate === null || onPostDeactivate === void 0 ? void 0 : onPostDeactivate();\n        });\n      };\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause(pauseOptions) {\n      if (state.paused || !state.active) {\n        return this;\n      }\n      var onPause = getOption(pauseOptions, 'onPause');\n      var onPostPause = getOption(pauseOptions, 'onPostPause');\n      state.paused = true;\n      onPause === null || onPause === void 0 ? void 0 : onPause();\n      removeListeners();\n      updateObservedNodes();\n      onPostPause === null || onPostPause === void 0 ? void 0 : onPostPause();\n      return this;\n    },\n    unpause: function unpause(unpauseOptions) {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n      var onUnpause = getOption(unpauseOptions, 'onUnpause');\n      var onPostUnpause = getOption(unpauseOptions, 'onPostUnpause');\n      state.paused = false;\n      onUnpause === null || onUnpause === void 0 ? void 0 : onUnpause();\n      updateTabbableNodes();\n      addListeners();\n      updateObservedNodes();\n      onPostUnpause === null || onPostUnpause === void 0 ? void 0 : onPostUnpause();\n      return this;\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === 'string' ? doc.querySelector(element) : element;\n      });\n      if (state.active) {\n        updateTabbableNodes();\n      }\n      updateObservedNodes();\n      return this;\n    }\n  };\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n  return trap;\n};\n\nexport { createFocusTrap };\n//# sourceMappingURL=focus-trap.esm.js.map\n","import { __rest } from \"tslib\";\nimport { createFocusTrap } from 'focus-trap';\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef } from 'react';\nimport { useUnmountEffect } from '../useUnmountEffect';\nexport const FocusTrap = forwardRef(function FocusTrap(_a, forwardedRef) {\n    var { active = true, paused = false, focusTrapOptions = {}, preventScrollOnDeactivate = false } = _a, props = __rest(_a, [\"active\", \"paused\", \"focusTrapOptions\", \"preventScrollOnDeactivate\"]);\n    // Fall back to internal ref if no forwarded ref is provided.\n    const ref = useRef(null);\n    useImperativeHandle(forwardedRef, () => ref.current);\n    // Create focus trap instance after rendering DOM.\n    const focusTrapRef = useRef(null);\n    useEffect(() => {\n        const focusTrap = createFocusTrap(ref.current, Object.assign(Object.assign({}, focusTrapOptions), { returnFocusOnDeactivate: false }));\n        focusTrapRef.current = focusTrap;\n        // Deactivate focus trap on cleanup.\n        return () => {\n            focusTrap.deactivate();\n        };\n    }, []);\n    // Handle activation status based on 'active' prop.\n    useEffect(() => {\n        const focusTrap = focusTrapRef.current;\n        active ? focusTrap === null || focusTrap === void 0 ? void 0 : focusTrap.activate() : focusTrap === null || focusTrap === void 0 ? void 0 : focusTrap.deactivate();\n    }, [active]);\n    // Handle pause status based on 'pause' prop.\n    useEffect(() => {\n        const focusTrap = focusTrapRef.current;\n        paused ? focusTrap === null || focusTrap === void 0 ? void 0 : focusTrap.pause() : focusTrap === null || focusTrap === void 0 ? void 0 : focusTrap.unpause();\n    }, [paused]);\n    // Store the currently active element to restore focus to later.\n    const previousElementRef = useRef(typeof document !== 'undefined' ? document.activeElement : null);\n    // Restore focus to the previously active element on unmount.\n    useUnmountEffect(() => {\n        if (focusTrapOptions.returnFocusOnDeactivate !== false && previousElementRef.current instanceof HTMLElement) {\n            previousElementRef.current.focus({\n                preventScroll: preventScrollOnDeactivate\n            });\n        }\n    });\n    return React.createElement(\"div\", Object.assign({ ref: ref }, props));\n});\nFocusTrap.displayName = 'FocusTrap';\n//# sourceMappingURL=FocusTrap.js.map","import { useEffect, useRef } from 'react';\n/**\n * A `useEffect`-like hook that only triggers when a component unmounts. Does not require a dependency list, as the effect callback will always be kept up to date.\n */\nexport function useUnmountEffect(effect) {\n    // Always use the latest effect callback so that it can reference the latest props and state.\n    const effectRef = useRef(effect);\n    effectRef.current = effect;\n    // Trigger the effect callback when the component unmounts.\n    useEffect(() => () => {\n        effectRef.current();\n    }, []);\n}\n//# sourceMappingURL=useUnmountEffect.js.map","/** This Component can be used to wrap a functional component in order to generate a random ID\n * Example of how to use this component\n *\n * const Component = ({id}: {id: string}) => (\n *  <GenerateId>{randomId => (\n *     <div id={id || randomId}>\n *       div with random ID\n *     </div>\n *   )}\n *  </GenerateId>\n *  );\n */\nimport * as React from 'react';\nlet currentId = 0;\nclass GenerateId extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.id = `${this.props.prefix}${currentId++}`;\n    }\n    render() {\n        return this.props.children(this.id);\n    }\n}\nGenerateId.displayName = 'GenerateId';\nGenerateId.defaultProps = {\n    prefix: 'pf-random-id-'\n};\nexport { GenerateId };\n//# sourceMappingURL=GenerateId.js.map","import './drawer.css';\nexport default {\n  \"dirRtl\": \"pf-v5-m-dir-rtl\",\n  \"drawer\": \"pf-v5-c-drawer\",\n  \"drawerActions\": \"pf-v5-c-drawer__actions\",\n  \"drawerBody\": \"pf-v5-c-drawer__body\",\n  \"drawerClose\": \"pf-v5-c-drawer__close\",\n  \"drawerContent\": \"pf-v5-c-drawer__content\",\n  \"drawerHead\": \"pf-v5-c-drawer__head\",\n  \"drawerMain\": \"pf-v5-c-drawer__main\",\n  \"drawerPanel\": \"pf-v5-c-drawer__panel\",\n  \"drawerPanelMain\": \"pf-v5-c-drawer__panel-main\",\n  \"drawerSection\": \"pf-v5-c-drawer__section\",\n  \"drawerSplitter\": \"pf-v5-c-drawer__splitter\",\n  \"drawerSplitterHandle\": \"pf-v5-c-drawer__splitter-handle\",\n  \"modifiers\": {\n    \"panelBottom\": \"pf-m-panel-bottom\",\n    \"inline\": \"pf-m-inline\",\n    \"noBorder\": \"pf-m-no-border\",\n    \"resizable\": \"pf-m-resizable\",\n    \"static\": \"pf-m-static\",\n    \"panelLeft\": \"pf-m-panel-left\",\n    \"expanded\": \"pf-m-expanded\",\n    \"resizing\": \"pf-m-resizing\",\n    \"noBackground\": \"pf-m-no-background\",\n    \"light_200\": \"pf-m-light-200\",\n    \"noPadding\": \"pf-m-no-padding\",\n    \"padding\": \"pf-m-padding\",\n    \"vertical\": \"pf-m-vertical\",\n    \"width_25\": \"pf-m-width-25\",\n    \"width_33\": \"pf-m-width-33\",\n    \"width_50\": \"pf-m-width-50\",\n    \"width_66\": \"pf-m-width-66\",\n    \"width_75\": \"pf-m-width-75\",\n    \"width_100\": \"pf-m-width-100\",\n    \"width_25OnLg\": \"pf-m-width-25-on-lg\",\n    \"width_33OnLg\": \"pf-m-width-33-on-lg\",\n    \"width_50OnLg\": \"pf-m-width-50-on-lg\",\n    \"width_66OnLg\": \"pf-m-width-66-on-lg\",\n    \"width_75OnLg\": \"pf-m-width-75-on-lg\",\n    \"width_100OnLg\": \"pf-m-width-100-on-lg\",\n    \"width_25OnXl\": \"pf-m-width-25-on-xl\",\n    \"width_33OnXl\": \"pf-m-width-33-on-xl\",\n    \"width_50OnXl\": \"pf-m-width-50-on-xl\",\n    \"width_66OnXl\": \"pf-m-width-66-on-xl\",\n    \"width_75OnXl\": \"pf-m-width-75-on-xl\",\n    \"width_100OnXl\": \"pf-m-width-100-on-xl\",\n    \"width_25On_2xl\": \"pf-m-width-25-on-2xl\",\n    \"width_33On_2xl\": \"pf-m-width-33-on-2xl\",\n    \"width_50On_2xl\": \"pf-m-width-50-on-2xl\",\n    \"width_66On_2xl\": \"pf-m-width-66-on-2xl\",\n    \"width_75On_2xl\": \"pf-m-width-75-on-2xl\",\n    \"width_100On_2xl\": \"pf-m-width-100-on-2xl\",\n    \"inlineOnLg\": \"pf-m-inline-on-lg\",\n    \"staticOnLg\": \"pf-m-static-on-lg\",\n    \"inlineOnXl\": \"pf-m-inline-on-xl\",\n    \"staticOnXl\": \"pf-m-static-on-xl\",\n    \"inlineOn_2xl\": \"pf-m-inline-on-2xl\",\n    \"staticOn_2xl\": \"pf-m-static-on-2xl\"\n  },\n  \"pageMain\": \"pf-v5-c-page__main\",\n  \"themeDark\": \"pf-v5-theme-dark\"\n};"],"names":["DrawerColorVariant","DrawerContext","isExpanded","isStatic","onExpand","position","drawerRef","drawerContentRef","isInline","Drawer","_a","className","children","props","__rest","Provider","value","Object","assign","drawer","modifiers","expanded","inline","static","panelLeft","panelBottom","ref","displayName","DrawerMain","drawerMain","DrawerContent","panelContent","colorVariant","default","drawerContent","light200","light_200","noBackground","DrawerContentBody","hasPadding","drawerBody","padding","isResizing","newSize","DrawerPanelContent","id","hasNoBorder","isResizable","onResize","minSize","defaultSize","maxSize","increment","resizeAriaLabel","widths","focusTrap","panel","splitterRef","separatorValue","setSeparatorValue","hidden","isExpandedInternal","setIsExpandedInternal","isFocusTrapActive","setIsFocusTrapActive","previouslyFocusedElement","panelRect","end","start","bottom","currWidth","setInitialVals","enabled","console","warn","calcValueNow","splitterPos","drawerSize","isRTL","window","getComputedStyle","current","getPropertyValue","getBoundingClientRect","left","right","top","newSplitterPos","Math","round","Number","EPSILON","handleTouchStart","e","stopPropagation","document","addEventListener","callbackTouchMove","passive","callbackTouchEnd","handleMousedown","preventDefault","callbackMouseMove","callbackMouseUp","classList","add","resizing","handleControlMove","controlPosition","style","overflowAnchor","setProperty","mousePos","clientY","clientX","removeEventListener","stopImmediatePropagation","touchPos","touches","remove","handleKeys","key","height","width","delta","boundaryCssVars","isValidFocusTrap","Component","prefix","panelId","focusTrapProps","tabIndex","role","active","focusTrapOptions","fallbackFocus","onActivate","activeElement","onDeactivate","focus","clickOutsideDeactivates","returnFocusOnDeactivate","initialFocus","elementToFocusOnExpand","undefined","escapeDeactivates","drawerPanel","resizable","noBorder","onTransitionEnd","ev","target","nativeEvent","propertyName","prevIsFocusTrapActive","drawerSplitter","vertical","onMouseDown","onKeyDown","onTouchStart","drawerSplitterHandle","drawerPanelMain","candidateSelectors","candidateSelector","join","NoElement","Element","matches","prototype","msMatchesSelector","webkitMatchesSelector","getRootNode","element","_element$getRootNode","call","ownerDocument","isInert","node","lookUp","_node$getAttribute","inertAtt","getAttribute","parentNode","getCandidates","el","includeContainer","filter","candidates","Array","slice","apply","querySelectorAll","unshift","getCandidatesIteratively","elements","options","elementsToCheck","from","length","shift","tagName","assigned","assignedElements","nestedCandidates","flatten","push","scopeParent","includes","shadowRoot","getShadowRoot","validShadowRoot","shadowRootFilter","_nestedCandidates","hasTabIndex","isNaN","parseInt","getTabIndex","Error","test","_node$getAttribute2","attValue","isContentEditable","sortOrderedTabbables","a","b","documentOrder","isInput","isZeroArea","_node$getBoundingClie","isNodeMatchingSelectorFocusable","disabled","type","isHiddenInput","_ref","displayCheck","visibility","nodeUnderDetails","parentElement","originalNode","rootNode","assignedSlot","host","_nodeRoot","_nodeRootHost","_nodeRootHost$ownerDo","_node$ownerDocument","nodeRoot","nodeRootHost","attached","contains","_nodeRoot2","_nodeRootHost2","_nodeRootHost2$ownerD","isNodeAttached","getClientRects","isHidden","some","child","isDetailsWithSummary","i","item","isDisabledFromFieldset","isNodeMatchingSelectorTabbable","isRadio","name","radioSet","radioScope","form","queryRadios","CSS","escape","err","error","message","checked","nodes","getCheckedRadio","isTabbableRadio","isNonTabbableRadio","isValidShadowRootTabbable","shadowHostNode","sortByOrder","regularTabbables","orderedTabbables","forEach","isScope","candidateTabindex","getSortOrderTabIndex","content","sort","reduce","acc","sortable","concat","isTabbable","focusableCandidateSelector","isFocusable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","_objectSpread2","arguments","source","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","arg","input","hint","prim","Symbol","toPrimitive","res","TypeError","String","_toPrimitive","_toPropertyKey","configurable","writable","isTabEvent","keyCode","isKeyForward","shiftKey","isKeyBackward","delay","fn","setTimeout","findIndex","arr","idx","every","valueOrHandler","_len","params","_key","getActualTarget","event","composedPath","internalTrapStack","createFocusTrap","userOptions","trap","doc","trapStack","config","delayInitialFocus","state","containers","containerGroups","tabbableGroups","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","paused","delayInitialFocusTimer","recentNavEvent","getOption","configOverrideOptions","optionName","configOptionName","findContainerIndex","container","tabbableNodes","find","getNodeForOption","optionValue","_len2","_key2","querySelector","getInitialFocusNode","tabbableOptions","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","map","bind","tabbable","focusableNodes","focusable","lastTabbableNode","firstDomTabbableNode","lastDomTabbableNode","reverse","posTabIndexesFound","nextTabbableNode","forward","nodeIdx","indexOf","group","g","tryFocus","preventScroll","toLowerCase","select","isSelectableInput","getReturnFocusNode","previousActiveElement","findNextNavNode","_ref2","_ref2$isBackward","isBackward","destinationNode","containerIndex","containerGroup","startOfGroupIndex","_ref3","destinationGroupIndex","destinationGroup","lastOfGroupIndex","_ref4","_destinationGroupIndex","_destinationGroup","checkPointerDown","deactivate","returnFocus","allowOutsideClick","checkFocusIn","targetContained","Document","nextNode","navAcrossContainers","mruContainerIdx","mruTabIdx","n","checkKey","checkKeyNav","checkClick","addListeners","activeTrap","pause","trapIndex","splice","activeFocusTraps","capture","removeListeners","mutationObserver","MutationObserver","mutations","mutation","removedNodes","updateObservedNodes","disconnect","observe","subtree","childList","activate","activateOptions","this","onPostActivate","checkCanFocusTrap","finishActivation","then","deactivateOptions","onPostDeactivate","checkCanReturnFocus","clearTimeout","unpause","finishDeactivation","pauseOptions","onPause","onPostPause","unpauseOptions","onUnpause","onPostUnpause","updateContainerElements","containerElements","elementsAsArray","Boolean","FocusTrap","forwardRef","forwardedRef","preventScrollOnDeactivate","useRef","useImperativeHandle","focusTrapRef","useEffect","previousElementRef","effect","effectRef","useUnmountEffect","HTMLElement","currentId","GenerateId","constructor","super","render","defaultProps"],"sourceRoot":""}