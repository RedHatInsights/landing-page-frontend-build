{"version":3,"file":"js/891.1650377247835.439bcda723c2e262fa4a.js","mappings":"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","sources":["webpack:///./src/store/index.js","webpack:///./src/store/contentReducer.js","webpack:///./src/App.js","webpack:///./src/moduleEntries/AppEntry.js","webpack:///./src/moduledBootstraps/bootstrap.js","webpack:///./src/store/action-types.js"],"sourcesContent":["import MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport promiseMiddleware from 'redux-promise-middleware';\n\nlet middlewareListener;\nlet registry;\n\nexport function init(...middleware) {\n  middlewareListener = new MiddlewareListener();\n  registry = getRegistry({}, [\n    middlewareListener.getMiddleware(),\n    promiseMiddleware,\n    notificationsMiddleware(),\n    ...middleware.filter((item) => typeof item === 'function'),\n  ]);\n\n  registry.register({ notifications: notificationsReducer });\n  return registry;\n}\n\nexport function addNewListener({ actionType, callback }) {\n  return middlewareListener.addNew({\n    on: actionType,\n    callback,\n  });\n}\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport {\n  LOAD_DATA,\n  REMOVE_ESTATE_TILE,\n  REMOVE_RECOMMENDATION_TILE,\n} from './action-types';\n\n/**\n * This is here temporarily to quickly store and use content data before we optimize and split it\n */\nexport function loadAllContent(\n  state,\n  { payload: { estate, recommendations, configTryLearn } }\n) {\n  return {\n    ...state,\n    estate,\n    recommendations,\n    configTryLearn,\n  };\n}\n\nexport function removeEstateTile(state, { payload }) {\n  return {\n    ...state,\n    estate: state.estate.map(({ items, ...rest }) => ({\n      ...rest,\n      items: items.filter(({ id }) => id !== payload),\n    })),\n  };\n}\n\nfunction removeTileFromSections({ items = [], ...recommendation }, tileId) {\n  return {\n    ...recommendation,\n    items: items.filter(({ id }) => id !== tileId),\n  };\n}\n\nexport function removeRecommendationTile(\n  state,\n  { payload: { tileId, category } }\n) {\n  return {\n    ...state,\n    recommendations: {\n      ...state.recommendations,\n      [category]: removeTileFromSections(\n        state.recommendations[category],\n        tileId\n      ),\n    },\n  };\n}\n\nexport default applyReducerHash(\n  {\n    [LOAD_DATA]: loadAllContent,\n    [REMOVE_ESTATE_TILE]: removeEstateTile,\n    [REMOVE_RECOMMENDATION_TILE]: removeRecommendationTile,\n  },\n  {\n    loaded: false,\n    estate: [],\n    recommendations: [],\n    configTryLearn: [],\n  }\n);\n","import React, {\n  useEffect,\n  useState,\n  createContext,\n  lazy,\n  Suspense,\n} from 'react';\nimport '@patternfly/patternfly/utilities/Text/text.css';\nimport { Switch, Route } from 'react-router-dom';\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport { IntlProvider } from 'react-intl';\nimport axiosInstance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport contentStore from './store/contentReducer';\n\nconst Landing = lazy(() =>\n  import(/* webpackCunkName: \"Landing\" */ './routes/Landing')\n);\nconst Maintenance = lazy(() =>\n  import(/* webpackCunkName: \"Maintenance\" */ './routes/Maintenance')\n);\nconst NotFound = lazy(() =>\n  import(/* webpackCunkName: \"NotFound\" */ './routes/404')\n);\n\nconst routes = {\n  landing: '/',\n  maintenance: '/maintenance',\n};\n\nexport const PermissionContext = createContext();\n\nconst App = () => {\n  const [isOrgAdmin, setIsOrgAdmin] = useState();\n\n  useEffect(() => {\n    getRegistry().register({ contentStore });\n    insights.chrome.init();\n    insights.chrome.identifyApp('landing');\n    window.insights.chrome.auth\n      .getUser()\n      .then((user) => user && setIsOrgAdmin(user.identity.user.is_org_admin));\n  }, []);\n\n  axiosInstance.interceptors.request.use(async (config) => {\n    await insights.chrome.auth.getUser();\n    const token = await insights.chrome.auth.getToken();\n    const updatedCfg = { ...config };\n    if (token) {\n      updatedCfg.headers = {\n        ...updatedCfg.headers,\n        Authorization: `Bearer ${token}`,\n      };\n    }\n    return updatedCfg;\n  });\n\n  return (\n    <IntlProvider locale=\"en\">\n      <PermissionContext.Provider value={{ isOrgAdmin }}>\n        <Suspense\n          fallback={\n            <Bullseye>\n              <Spinner size=\"xl\" />\n            </Bullseye>\n          }\n        >\n          <Switch>\n            <Route exact path={routes.landing} component={Landing} />\n            <Route exact path={routes.landingBeta} component={Landing} />\n            <Route exact path={routes.maintenance} component={Maintenance} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </Suspense>\n      </PermissionContext.Provider>\n    </IntlProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { init } from '../store';\nimport App from '../App';\nimport PropTypes from 'prop-types';\n\nconst pathName = window.location.pathname.split('/');\npathName.shift();\n\nconst AppRoot = ({ logger }) => (\n  <Provider store={init(logger).getStore()}>\n    <React.Fragment>\n      <Router basename={`/${pathName[0] === 'beta' ? 'beta/' : ''}`}>\n        <App />\n      </Router>\n      <NotificationsPortal />\n    </React.Fragment>\n  </Provider>\n);\n\nAppRoot.propTypes = {\n  logger: PropTypes.func,\n};\n\nexport default AppRoot;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppEntry from '../moduleEntries/AppEntry';\n\nconst rootEl = document.getElementById('root');\n\nReactDOM.render(<AppEntry />, rootEl);\n","export const LOAD_DATA = 'LOAD_DATA';\nexport const REMOVE_ESTATE_TILE = 'REMOVE_ESTATE_TILE';\nexport const REMOVE_RECOMMENDATION_TILE = 'REMOVE_RECOMMENDATION_TILE';\n"],"names":["middlewareListener","registry","init","MiddlewareListener","middleware","getRegistry","getMiddleware","promiseMiddleware","notificationsMiddleware","filter","item","register","notifications","notificationsReducer","removeTileFromSections","tileId","items","id","applyReducerHash","LOAD_DATA","state","payload","estate","recommendations","configTryLearn","REMOVE_ESTATE_TILE","map","REMOVE_RECOMMENDATION_TILE","category","loaded","Landing","lazy","Maintenance","NotFound","routes","landing","maintenance","PermissionContext","createContext","useState","isOrgAdmin","setIsOrgAdmin","useEffect","contentStore","insights","chrome","identifyApp","window","auth","getUser","then","user","identity","is_org_admin","axiosInstance","config","getToken","token","updatedCfg","headers","Authorization","locale","Provider","value","Suspense","fallback","Bullseye","Spinner","size","Switch","Route","exact","path","component","landingBeta","pathName","location","pathname","split","shift","AppRoot","logger","store","getStore","basename","propTypes","PropTypes","rootEl","document","getElementById","ReactDOM","AppEntry"],"sourceRoot":""}