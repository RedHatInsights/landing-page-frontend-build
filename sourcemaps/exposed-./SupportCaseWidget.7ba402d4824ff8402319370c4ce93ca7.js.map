{"version":3,"file":"js/exposed-./SupportCaseWidget.65eda9f66afcba989def.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/useChrome/useChrome.js","webpack:///./node_modules/@patternfly/react-table/dist/esm/components/Table/Caption.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Skeleton/skeleton.mjs","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Skeleton/Skeleton.js","webpack:///./node_modules/@patternfly/react-component-groups/dist/esm/SkeletonTable/SkeletonTable.js","webpack:///./src/utils/consts.tsx","webpack:///./src/components/widgets/support-case-widget.tsx"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useScalprum } from '@scalprum/react-core';\nvar useChrome = function (selector) {\n    var _a;\n    var state = useScalprum();\n    var chrome = ((_a = state.api) === null || _a === void 0 ? void 0 : _a.chrome) || {};\n    chrome = __assign(__assign({}, chrome), { initialized: state.initialized });\n    if (typeof selector === 'function') {\n        return selector(chrome);\n    }\n    return chrome;\n};\nexport default useChrome;\n//# sourceMappingURL=useChrome.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Table/table.mjs';\nimport { css } from '@patternfly/react-styles';\nexport const Caption = (_a) => {\n    var { children, className } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"caption\", Object.assign({ className: css(styles.tableCaption, className) }, props), children));\n};\nCaption.displayName = 'Caption';\n//# sourceMappingURL=Caption.js.map","import './skeleton.css';\nexport default {\n  \"dirRtl\": \"pf-v5-m-dir-rtl\",\n  \"modifiers\": {\n    \"circle\": \"pf-m-circle\",\n    \"square\": \"pf-m-square\",\n    \"widthSm\": \"pf-m-width-sm\",\n    \"widthMd\": \"pf-m-width-md\",\n    \"widthLg\": \"pf-m-width-lg\",\n    \"width_25\": \"pf-m-width-25\",\n    \"width_33\": \"pf-m-width-33\",\n    \"width_50\": \"pf-m-width-50\",\n    \"width_66\": \"pf-m-width-66\",\n    \"width_75\": \"pf-m-width-75\",\n    \"heightSm\": \"pf-m-height-sm\",\n    \"heightMd\": \"pf-m-height-md\",\n    \"heightLg\": \"pf-m-height-lg\",\n    \"height_25\": \"pf-m-height-25\",\n    \"height_33\": \"pf-m-height-33\",\n    \"height_50\": \"pf-m-height-50\",\n    \"height_66\": \"pf-m-height-66\",\n    \"height_75\": \"pf-m-height-75\",\n    \"height_100\": \"pf-m-height-100\",\n    \"text_4xl\": \"pf-m-text-4xl\",\n    \"text_3xl\": \"pf-m-text-3xl\",\n    \"text_2xl\": \"pf-m-text-2xl\",\n    \"textXl\": \"pf-m-text-xl\",\n    \"textLg\": \"pf-m-text-lg\",\n    \"textMd\": \"pf-m-text-md\",\n    \"textSm\": \"pf-m-text-sm\"\n  },\n  \"skeleton\": \"pf-v5-c-skeleton\",\n  \"themeDark\": \"pf-v5-theme-dark\"\n};","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Skeleton/skeleton';\nimport { css } from '@patternfly/react-styles';\nexport const Skeleton = (_a) => {\n    var { className, width, height, fontSize, shape, screenreaderText } = _a, props = __rest(_a, [\"className\", \"width\", \"height\", \"fontSize\", \"shape\", \"screenreaderText\"]);\n    const fontHeightClassName = fontSize\n        ? Object.values(styles.modifiers).find((key) => key === `pf-m-text-${fontSize}`)\n        : undefined;\n    return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.skeleton, fontSize && fontHeightClassName, shape === 'circle' && styles.modifiers.circle, shape === 'square' && styles.modifiers.square, className) }, ((width || height) && {\n        style: Object.assign({ '--pf-v5-c-skeleton--Width': width ? width : undefined, '--pf-v5-c-skeleton--Height': height ? height : undefined }, props.style)\n    })),\n        React.createElement(\"span\", { className: \"pf-v5-screen-reader\" }, screenreaderText)));\n};\nSkeleton.displayName = 'Skeleton';\n//# sourceMappingURL=Skeleton.js.map","import React from 'react';\nimport { Caption, Table, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { Skeleton } from '@patternfly/react-core';\nfunction hasCustomColumns(props) {\n    return Array.isArray(props.columns);\n}\nconst SkeletonTable = (props) => {\n    const { variant, rows = 5, caption } = props;\n    const rowCells = hasCustomColumns(props) ? props.columns.length : props.numberOfColumns;\n    const rowArray = [...new Array(rowCells)];\n    const bodyRows = [...new Array(rows)].map((_, index) => (React.createElement(Tr, { key: index }, rowArray.map((_, index) => (React.createElement(Td, { key: index },\n        React.createElement(Skeleton, null)))))));\n    return (React.createElement(Table, { \"aria-label\": \"Loading\", variant: variant },\n        caption && React.createElement(Caption, null, caption),\n        React.createElement(Thead, null,\n            React.createElement(Tr, null, hasCustomColumns(props)\n                ? props.columns.map((c, index) => React.createElement(Th, { key: index }, c))\n                : rowArray.map((_, index) => (React.createElement(Th, { key: index },\n                    React.createElement(Skeleton, null)))))),\n        React.createElement(Tbody, null, bodyRows)));\n};\nexport default SkeletonTable;\n","import { Label } from '@patternfly/react-core/dist/dynamic/components/Label';\nimport React from 'react';\n\n// for the support cases widget\nexport const url = 'https://api.access.redhat.com/support/v1/cases/filter';\n\nexport const MAX_ROWS = 5;\n\nexport const columnNames = {\n  caseId: 'Case ID',\n  issueSummary: 'Issue summary',\n  modifiedBy: 'Modified by',\n  severity: 'Severity',\n  status: 'Status',\n};\n\nexport const severityTypes = {\n  urgent: '1 (Urgent)',\n  high: '2 (High)',\n  normal: '3 (Normal)',\n  low: '4 (Low)',\n};\n\nexport const labelColor = (severity: string) => {\n  const severityMapper = {\n    [severityTypes.urgent]: <Label color=\"red\">{severity}</Label>,\n    [severityTypes.high]: <Label color=\"orange\">{severity}</Label>,\n    [severityTypes.normal]: <Label color=\"blue\">{severity}</Label>,\n    [severityTypes.low]: <Label color=\"grey\">{severity}</Label>,\n  };\n  return severityMapper[severity] ?? '';\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  Table,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport { Button } from '@patternfly/react-core/dist/dynamic/components/Button';\nimport { EmptyState } from '@patternfly/react-core/dist/dynamic/components/EmptyState';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/dynamic/components/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/dynamic/components/EmptyState';\nimport { EmptyStateVariant } from '@patternfly/react-core/dist/dynamic/components/EmptyState';\nimport { Stack } from '@patternfly/react-core/dist/dynamic/layouts/Stack';\nimport { StackItem } from '@patternfly/react-core/dist/dynamic/layouts/Stack';\nimport { Title } from '@patternfly/react-core/dist/dynamic/components/Title';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/dynamic/icons/external-link-alt-icon';\nimport HeadsetIcon from '@patternfly/react-icons/dist/dynamic/icons/headset-icon';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport SkeletonTable from '@patternfly/react-component-groups/dist/dynamic/SkeletonTable';\nimport { MAX_ROWS, columnNames, labelColor, url } from '../../utils/consts';\nimport './support-case-widget.scss';\n\nexport type Case = {\n  id: string;\n  caseNumber: string;\n  summary: string;\n  lastModifiedById: string;\n  severity: string;\n  status: string;\n};\n\nconst SupportCaseWidget: React.FunctionComponent = () => {\n  const [cases, setCases] = useState<Case[]>([]);\n  const chrome = useChrome();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchSupportCases = async () => {\n    const token = await chrome.auth.getToken();\n    const user = await chrome.auth.getUser();\n    const options = {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n      body: JSON.stringify({\n        createdBySSOName: `${user?.identity.user?.username}`,\n      }),\n    };\n\n    try {\n      const response = await fetch(url, options);\n      const { cases } = await response.json();\n      setCases(cases);\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Unable to fetch support cases', error);\n    }\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchSupportCases();\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <SkeletonTable\n          rows={3}\n          columns={[\n            columnNames.caseId,\n            columnNames.issueSummary,\n            columnNames.modifiedBy,\n            columnNames.severity,\n            columnNames.status,\n          ]}\n        />\n      ) : cases.length === 0 ? (\n        <EmptyState variant={EmptyStateVariant.lg}>\n          <EmptyStateIcon icon={HeadsetIcon} />\n          <Title headingLevel=\"h4\" size=\"lg\">\n            No open support cases\n          </Title>\n          <EmptyStateBody>\n            <Stack>\n              <StackItem>\n                We can&apos;t find any active support cases opened by you.\n              </StackItem>\n            </Stack>\n          </EmptyStateBody>\n          <Button\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"end\"\n            href=\"https://access.redhat.com/support/cases/#/case/new/get-support?caseCreate=true\"\n          >\n            Open a support case\n          </Button>\n        </EmptyState>\n      ) : (\n        <Table\n          aria-label=\"Support case table widget\"\n          variant={TableVariant.compact}\n        >\n          <Thead>\n            <Tr>\n              <Th>{columnNames.caseId}</Th>\n              <Th>{columnNames.issueSummary}</Th>\n              <Th>{columnNames.modifiedBy}</Th>\n              <Th>{columnNames.severity}</Th>\n              <Th>{columnNames.status}</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {cases?.slice(0, MAX_ROWS).map((c) => (\n              <Tr key={c.id}>\n                <Td dataLabel={columnNames.caseId}>\n                  <Button\n                    className=\"pf-v5-u-pl-0\"\n                    variant=\"link\"\n                    icon={<ExternalLinkAltIcon />}\n                    iconPosition=\"end\"\n                    component=\"a\"\n                    href={`https://access.redhat.com/support/cases/#/case/${c.caseNumber}`}\n                  >\n                    {c.caseNumber}\n                  </Button>\n                </Td>\n                <Td dataLabel={columnNames.issueSummary}>{c.summary}</Td>\n                <Td dataLabel={columnNames.modifiedBy}>{c.lastModifiedById}</Td>\n                <Td dataLabel={columnNames.severity}>\n                  {labelColor(c.severity)}\n                </Td>\n                <Td dataLabel={columnNames.status}>{c.status}</Td>\n              </Tr>\n            ))}\n          </Tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default SupportCaseWidget;\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","selector","_a","state","useScalprum","chrome","api","initialized","Caption","children","className","props","__rest","tableCaption","displayName","Skeleton","width","height","fontSize","shape","screenreaderText","fontHeightClassName","values","find","key","undefined","circle","square","style","hasCustomColumns","Array","isArray","columns","variant","rows","caption","rowCells","numberOfColumns","rowArray","bodyRows","map","_","index","Tr","Td","Table","Thead","c","Th","Tbody","columnNames","cases","setCases","useState","useChrome","isLoading","setIsLoading","useEffect","async","token","auth","getToken","user","getUser","options","method","headers","Authorization","Accept","body","JSON","stringify","createdBySSOName","identity","username","response","fetch","json","error","console","fetchSupportCases","EmptyState","EmptyStateVariant","lg","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","Stack","StackItem","Button","iconPosition","href","compact","slice","id","dataLabel","component","caseNumber","summary","lastModifiedById","severity","Label","color","status"],"sourceRoot":""}