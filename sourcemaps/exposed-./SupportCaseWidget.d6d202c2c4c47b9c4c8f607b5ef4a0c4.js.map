{"version":3,"file":"js/exposed-./SupportCaseWidget.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/useChrome/useChrome.js","webpack:///./node_modules/@patternfly/react-table/dist/esm/components/Table/Caption.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Skeleton/skeleton.mjs","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Skeleton/Skeleton.js","webpack:///./node_modules/@patternfly/react-component-groups/dist/esm/SkeletonTable/SkeletonTable.js","webpack:///./src/utils/consts.tsx","webpack:///./src/components/widgets/support-case-table-filter.tsx","webpack:///./src/components/widgets/support-case-widget.tsx"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useScalprum } from '@scalprum/react-core';\nvar useChrome = function (selector) {\n    var _a;\n    var state = useScalprum();\n    var chrome = ((_a = state.api) === null || _a === void 0 ? void 0 : _a.chrome) || {};\n    chrome = __assign(__assign({}, chrome), { initialized: state.initialized });\n    if (typeof selector === 'function') {\n        return selector(chrome);\n    }\n    return chrome;\n};\nexport default useChrome;\n//# sourceMappingURL=useChrome.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Table/table.mjs';\nimport { css } from '@patternfly/react-styles';\nexport const Caption = (_a) => {\n    var { children, className } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"caption\", Object.assign({ className: css(styles.tableCaption, className) }, props), children));\n};\nCaption.displayName = 'Caption';\n//# sourceMappingURL=Caption.js.map","import './skeleton.css';\nexport default {\n  \"dirRtl\": \"pf-v5-m-dir-rtl\",\n  \"modifiers\": {\n    \"circle\": \"pf-m-circle\",\n    \"square\": \"pf-m-square\",\n    \"widthSm\": \"pf-m-width-sm\",\n    \"widthMd\": \"pf-m-width-md\",\n    \"widthLg\": \"pf-m-width-lg\",\n    \"width_25\": \"pf-m-width-25\",\n    \"width_33\": \"pf-m-width-33\",\n    \"width_50\": \"pf-m-width-50\",\n    \"width_66\": \"pf-m-width-66\",\n    \"width_75\": \"pf-m-width-75\",\n    \"heightSm\": \"pf-m-height-sm\",\n    \"heightMd\": \"pf-m-height-md\",\n    \"heightLg\": \"pf-m-height-lg\",\n    \"height_25\": \"pf-m-height-25\",\n    \"height_33\": \"pf-m-height-33\",\n    \"height_50\": \"pf-m-height-50\",\n    \"height_66\": \"pf-m-height-66\",\n    \"height_75\": \"pf-m-height-75\",\n    \"height_100\": \"pf-m-height-100\",\n    \"text_4xl\": \"pf-m-text-4xl\",\n    \"text_3xl\": \"pf-m-text-3xl\",\n    \"text_2xl\": \"pf-m-text-2xl\",\n    \"textXl\": \"pf-m-text-xl\",\n    \"textLg\": \"pf-m-text-lg\",\n    \"textMd\": \"pf-m-text-md\",\n    \"textSm\": \"pf-m-text-sm\"\n  },\n  \"skeleton\": \"pf-v5-c-skeleton\",\n  \"themeDark\": \"pf-v5-theme-dark\"\n};","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Skeleton/skeleton';\nimport { css } from '@patternfly/react-styles';\nexport const Skeleton = (_a) => {\n    var { className, width, height, fontSize, shape, screenreaderText } = _a, props = __rest(_a, [\"className\", \"width\", \"height\", \"fontSize\", \"shape\", \"screenreaderText\"]);\n    const fontHeightClassName = fontSize\n        ? Object.values(styles.modifiers).find((key) => key === `pf-m-text-${fontSize}`)\n        : undefined;\n    return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.skeleton, fontSize && fontHeightClassName, shape === 'circle' && styles.modifiers.circle, shape === 'square' && styles.modifiers.square, className) }, ((width || height) && {\n        style: Object.assign({ '--pf-v5-c-skeleton--Width': width ? width : undefined, '--pf-v5-c-skeleton--Height': height ? height : undefined }, props.style)\n    })),\n        React.createElement(\"span\", { className: \"pf-v5-screen-reader\" }, screenreaderText)));\n};\nSkeleton.displayName = 'Skeleton';\n//# sourceMappingURL=Skeleton.js.map","import React from 'react';\nimport { Caption, Table, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { Skeleton } from '@patternfly/react-core';\nfunction hasCustomColumns(props) {\n    return Array.isArray(props.columns);\n}\nconst SkeletonTable = (props) => {\n    const { variant, rows = 5, caption } = props;\n    const rowCells = hasCustomColumns(props) ? props.columns.length : props.numberOfColumns;\n    const rowArray = [...new Array(rowCells)];\n    const bodyRows = [...new Array(rows)].map((_, index) => (React.createElement(Tr, { key: index }, rowArray.map((_, index) => (React.createElement(Td, { key: index },\n        React.createElement(Skeleton, null)))))));\n    return (React.createElement(Table, { \"aria-label\": \"Loading\", variant: variant },\n        caption && React.createElement(Caption, null, caption),\n        React.createElement(Thead, null,\n            React.createElement(Tr, null, hasCustomColumns(props)\n                ? props.columns.map((c, index) => React.createElement(Th, { key: index }, c))\n                : rowArray.map((_, index) => (React.createElement(Th, { key: index },\n                    React.createElement(Skeleton, null)))))),\n        React.createElement(Tbody, null, bodyRows)));\n};\nexport default SkeletonTable;\n","import { Label } from '@patternfly/react-core/dist/dynamic/components/Label';\nimport React from 'react';\n\n// for the support cases widget\nexport const getUrl = (env: string) =>\n  `https://api.access${\n    env === 'stage' || env === 'frhStage' ? '.stage' : ''\n  }.redhat.com/support/v1/cases/filter`;\n\nexport const MAX_ROWS = 5;\n\nexport const columnNames = {\n  caseId: 'Case ID',\n  issueSummary: 'Issue summary',\n  modifiedBy: 'Modified by',\n  severity: 'Severity',\n  status: 'Status',\n};\n\nexport const severityTypes = {\n  urgent: '1 (Urgent)',\n  high: '2 (High)',\n  normal: '3 (Normal)',\n  low: '4 (Low)',\n};\n\nexport const statusTypes = {\n  closed: 'Closed',\n  customerWaiting: 'Waiting on Customer',\n  redHatWaiting: 'Waiting on Red Hat',\n};\n\nexport const labelColor = (severity: string) => {\n  const severityMapper = {\n    [severityTypes.urgent]: <Label color=\"red\">{severity}</Label>,\n    [severityTypes.high]: <Label color=\"orange\">{severity}</Label>,\n    [severityTypes.normal]: <Label color=\"blue\">{severity}</Label>,\n    [severityTypes.low]: <Label color=\"grey\">{severity}</Label>,\n  };\n  return severityMapper[severity] ?? '';\n};\n","import React, { MouseEvent } from 'react';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarFilter,\n  ToolbarGroup,\n  ToolbarToggleGroup,\n} from '@patternfly/react-core/dist/dynamic/components/Toolbar';\nimport {\n  MenuToggle,\n  MenuToggleElement,\n} from '@patternfly/react-core/dist/dynamic/components/MenuToggle';\nimport {\n  Select,\n  SelectList,\n  SelectOption,\n} from '@patternfly/react-core/dist/dynamic/components/Select';\nimport FilterIcon from '@patternfly/react-icons/dist/esm/icons/filter-icon';\nimport { severityTypes, statusTypes } from '../../utils/consts';\n\nexport const SupportCaseWidgetTableFilter: React.FunctionComponent = () => {\n  const [isSeverityExpanded, setIsSeverityExpanded] = React.useState(false);\n  const [isStatusExpanded, setIsStatusExpanded] = React.useState(false);\n\n  const [filters, setFilters] = React.useState<Record<string, string[]>>({\n    severity: [],\n    status: [],\n  });\n\n  const onSelect = React.useCallback(\n    (\n      type: string,\n      event?: React.MouseEvent<Element, MouseEvent> | undefined,\n      value?: string | undefined\n    ) => {\n      if (!event || typeof value !== 'string') {\n        return;\n      }\n\n      const checked = (event.target as HTMLInputElement).checked;\n      setFilters((prev) => {\n        const prevSelections = prev[type] || [];\n        return {\n          ...prev,\n          [type]: checked\n            ? [...prevSelections, value]\n            : prevSelections.filter((v) => v !== v),\n        };\n      });\n    },\n    []\n  );\n\n  const onSeveritySelect = (\n    event: React.MouseEvent<Element, MouseEvent>,\n    value: string\n  ) => {\n    onSelect('severity', event, value);\n  };\n\n  const onStatusSelect = (\n    event: React.MouseEvent<Element, MouseEvent>,\n    value: string\n  ) => {\n    onSelect('status', event, value);\n  };\n\n  const onDelete = (type: string, id: string) => {\n    const filterTypes: { [key: string]: string[] } = {\n      severity: filters.severity.filter((fil: string) => fil !== id),\n      status: filters.status.filter((fil: string) => fil !== id),\n    };\n    setFilters({\n      severity: type === 'Severity' ? filterTypes[type] : filters.severity,\n      status: type === 'Status' ? filterTypes[type] : filters.status,\n    });\n  };\n\n  const onDeleteGroup = (type: string) => {\n    const newFilters = {\n      severity: type === 'Severity' ? [] : filters.severity,\n      status: type === 'Status' ? [] : filters.status,\n    };\n    setFilters(newFilters);\n  };\n\n  const onSeverityToggle = () => {\n    setIsSeverityExpanded(!isSeverityExpanded);\n  };\n\n  const onStatusToggle = () => {\n    setIsStatusExpanded(!isStatusExpanded);\n  };\n\n  const statusVariants = [\n    statusTypes.closed,\n    statusTypes.customerWaiting,\n    statusTypes.redHatWaiting,\n  ];\n\n  const severityVariants = [\n    severityTypes.high,\n    severityTypes.low,\n    severityTypes.normal,\n    severityTypes.urgent,\n  ];\n\n  const statusMenuItems = (\n    <SelectList>\n      {statusVariants.map((statusType) => (\n        <SelectOption\n          hasCheckbox\n          key={statusType}\n          value={statusType}\n          isSelected={filters.status.includes(statusType)}\n        >\n          {statusType}\n        </SelectOption>\n      ))}\n    </SelectList>\n  );\n\n  const severityMenuItems = (\n    <SelectList>\n      {severityVariants.map((severityType) => (\n        <SelectOption\n          hasCheckbox\n          key={severityType}\n          value={severityType}\n          isSelected={filters.severity.includes(severityType)}\n        >\n          {severityType}\n        </SelectOption>\n      ))}\n    </SelectList>\n  );\n\n  const toggleGroupItems = (\n    <React.Fragment>\n      <ToolbarGroup variant=\"filter-group\">\n        <ToolbarFilter\n          chips={filters.severity}\n          deleteChip={(category, chip) =>\n            onDelete(category as string, chip as string)\n          }\n          deleteChipGroup={(category) => onDeleteGroup(category as string)}\n          categoryName=\"Severity\"\n        >\n          <Select\n            aria-label=\"Severity\"\n            role=\"menu\"\n            toggle={(toggleRef: React.Ref<MenuToggleElement>) => (\n              <MenuToggle\n                ref={toggleRef}\n                onClick={onSeverityToggle}\n                isExpanded={isSeverityExpanded}\n                style={\n                  {\n                    width: '140px',\n                  } as React.CSSProperties\n                }\n              >\n                Severity\n              </MenuToggle>\n            )}\n            onSelect={(event, value) =>\n              onSeveritySelect(\n                event as unknown as React.MouseEvent<Element, MouseEvent>,\n                value as string\n              )\n            }\n            selected={filters.severity}\n            isOpen={isSeverityExpanded}\n            onOpenChange={(isOpen) => setIsSeverityExpanded(isOpen)}\n          >\n            {severityMenuItems}\n          </Select>\n        </ToolbarFilter>\n        <ToolbarFilter\n          chips={filters.status}\n          deleteChip={(category, chip) =>\n            onDelete(category as string, chip as string)\n          }\n          deleteChipGroup={(category) => onDeleteGroup(category as string)}\n          categoryName=\"Status\"\n        >\n          <Select\n            aria-label=\"Status\"\n            role=\"menu\"\n            toggle={(toggleRef: React.Ref<MenuToggleElement>) => (\n              <MenuToggle\n                ref={toggleRef}\n                onClick={onStatusToggle}\n                isExpanded={isStatusExpanded}\n                style={\n                  {\n                    width: '140px',\n                  } as React.CSSProperties\n                }\n              >\n                Status\n              </MenuToggle>\n            )}\n            onSelect={(event, value) =>\n              onStatusSelect(\n                event as unknown as React.MouseEvent<Element, MouseEvent>,\n                value as string\n              )\n            }\n            selected={filters.status}\n            isOpen={isStatusExpanded}\n            onOpenChange={(isOpen) => setIsStatusExpanded(isOpen)}\n          >\n            {statusMenuItems}\n          </Select>\n        </ToolbarFilter>\n      </ToolbarGroup>\n    </React.Fragment>\n  );\n\n  const toolbarItems = (\n    <React.Fragment>\n      <ToolbarToggleGroup toggleIcon={<FilterIcon />} breakpoint=\"xl\">\n        {toggleGroupItems}\n      </ToolbarToggleGroup>\n    </React.Fragment>\n  );\n\n  return (\n    <Toolbar\n      id=\"toolbar-with-filter\"\n      className=\"pf-m-toggle-group-container\"\n      collapseListedFiltersBreakpoint=\"xl\"\n    >\n      <ToolbarContent>{toolbarItems}</ToolbarContent>\n    </Toolbar>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  ISortBy,\n  SortByDirection,\n  Table,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport { Button } from '@patternfly/react-core/dist/dynamic/components/Button';\nimport { EmptyState } from '@patternfly/react-core/dist/dynamic/components/EmptyState';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/dynamic/components/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/dynamic/components/EmptyState';\nimport { EmptyStateVariant } from '@patternfly/react-core/dist/dynamic/components/EmptyState';\nimport { Stack } from '@patternfly/react-core/dist/dynamic/layouts/Stack';\nimport { StackItem } from '@patternfly/react-core/dist/dynamic/layouts/Stack';\nimport { Title } from '@patternfly/react-core/dist/dynamic/components/Title';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/dynamic/icons/external-link-alt-icon';\nimport HeadsetIcon from '@patternfly/react-icons/dist/dynamic/icons/headset-icon';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport SkeletonTable from '@patternfly/react-component-groups/dist/dynamic/SkeletonTable';\nimport { MAX_ROWS, columnNames, getUrl, labelColor } from '../../utils/consts';\nimport './support-case-widget.scss';\nimport { SupportCaseWidgetTableFilter } from './support-case-table-filter';\n\nconst SUPPORT_CASE_URL =\n  'https://access.redhat.com/support/cases/#/case/new/get-support?caseCreate=true';\n\nexport type Case = {\n  id: string;\n  caseNumber: string;\n  summary: string;\n  lastModifiedById: string;\n  severity: string;\n  status: string;\n  productFamily: string;\n};\n\nconst SupportCaseWidget: React.FunctionComponent = () => {\n  const [cases, setCases] = useState<Case[]>([]);\n  const chrome = useChrome();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [sortBy, setSortBy] = useState<ISortBy>({\n    index: 0,\n    direction: SortByDirection.asc,\n  });\n\n  const columns = [\n    {\n      name: 'Case ID',\n      sort: (a: Case, b: Case) => a.caseNumber.localeCompare(b.caseNumber),\n    },\n    {\n      name: 'Issue summary',\n      sort: (a: Case, b: Case) => a.summary.localeCompare(b.summary),\n    },\n    {\n      name: 'Modified by',\n      sort: (a: Case, b: Case) =>\n        a.lastModifiedById.localeCompare(b.lastModifiedById),\n    },\n    {\n      name: 'Severity',\n      sort: (a: Case, b: Case) => a.severity.localeCompare(b.severity),\n    },\n    {\n      name: 'Status',\n      sort: (a: Case, b: Case) => a.status.localeCompare(b.status),\n    },\n  ];\n\n  const onSort = (\n    _event: React.MouseEvent,\n    index: number,\n    direction: SortByDirection\n  ) => {\n    setSortBy({ index, direction });\n\n    const sortedCases = [...cases].sort((a, b) => {\n      const sortFunc = columns[index].sort;\n\n      if (direction === SortByDirection.asc) {\n        return sortFunc(a, b);\n      } else {\n        return sortFunc(b, a);\n      }\n    });\n    setCases([...sortedCases]);\n  };\n\n  const fetchSupportCases = async () => {\n    const token = await chrome.auth.getToken();\n    const user = await chrome.auth.getUser();\n    const options = {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n      body: JSON.stringify({\n        createdBySSOName: `${user?.identity.user?.username}`,\n      }),\n    };\n\n    try {\n      const response = await fetch(getUrl(chrome.getEnvironment()), options);\n      const { cases } = await response.json();\n      setCases(cases);\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Unable to fetch support cases', error);\n    }\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchSupportCases();\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <SkeletonTable\n          rows={3}\n          columns={[\n            columnNames.caseId,\n            columnNames.issueSummary,\n            columnNames.modifiedBy,\n            columnNames.severity,\n            columnNames.status,\n          ]}\n        />\n      ) : cases.length === 0 ? (\n        <EmptyState variant={EmptyStateVariant.lg}>\n          <EmptyStateIcon icon={HeadsetIcon} />\n          <Title headingLevel=\"h4\" size=\"lg\">\n            No open support cases\n          </Title>\n          <EmptyStateBody>\n            <Stack>\n              <StackItem>\n                We can&apos;t find any active support cases opened by you.\n              </StackItem>\n            </Stack>\n          </EmptyStateBody>\n          <Button\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"end\"\n            href={SUPPORT_CASE_URL}\n            onClick={() => {\n              window.open(SUPPORT_CASE_URL, '_blank');\n            }}\n          >\n            Open a support case\n          </Button>\n        </EmptyState>\n      ) : (\n        <Table\n          aria-label=\"Support case table widget\"\n          variant={TableVariant.compact}\n        >\n          <Thead>\n            <>\n              <SupportCaseWidgetTableFilter />\n              <Tr>\n                {columns.map((col, index) => (\n                  <Th\n                    key={index}\n                    sort={{\n                      sortBy,\n                      onSort,\n                      columnIndex: index,\n                    }}\n                  >\n                    {col.name}\n                  </Th>\n                ))}\n              </Tr>\n            </>\n          </Thead>\n          <Tbody>\n            {cases?.slice(0, MAX_ROWS).map((c) => (\n              <Tr key={c.id}>\n                <Td dataLabel={columnNames.caseId}>\n                  <Button\n                    className=\"pf-v5-u-pl-0\"\n                    variant=\"link\"\n                    icon={<ExternalLinkAltIcon />}\n                    iconPosition=\"end\"\n                    component=\"a\"\n                    href={`https://access.redhat.com/support/cases/#/case/${c.caseNumber}`}\n                  >\n                    {c.caseNumber}\n                  </Button>\n                </Td>\n                <Td dataLabel={columnNames.issueSummary}>{c.summary}</Td>\n                <Td dataLabel={columnNames.modifiedBy}>{c.lastModifiedById}</Td>\n                <Td dataLabel={columnNames.severity}>\n                  {labelColor(c.severity)}\n                </Td>\n                <Td dataLabel={columnNames.status}>{c.status}</Td>\n              </Tr>\n            ))}\n          </Tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default SupportCaseWidget;\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","selector","_a","state","useScalprum","chrome","api","initialized","Caption","children","className","props","__rest","tableCaption","displayName","Skeleton","width","height","fontSize","shape","screenreaderText","fontHeightClassName","values","find","key","undefined","circle","square","style","hasCustomColumns","Array","isArray","columns","variant","rows","caption","rowCells","numberOfColumns","rowArray","bodyRows","map","_","index","Tr","Td","Table","Thead","c","Th","Tbody","columnNames","severityTypes","SupportCaseWidgetTableFilter","isSeverityExpanded","setIsSeverityExpanded","isStatusExpanded","setIsStatusExpanded","filters","setFilters","severity","status","onSelect","type","event","value","checked","target","prev","prevSelections","filter","v","onDelete","id","filterTypes","fil","onDeleteGroup","newFilters","onSeverityToggle","onStatusToggle","statusVariants","severityVariants","statusMenuItems","SelectList","statusType","SelectOption","hasCheckbox","isSelected","includes","severityMenuItems","severityType","toggleGroupItems","ToolbarGroup","ToolbarFilter","chips","deleteChip","category","chip","deleteChipGroup","categoryName","Select","role","toggle","toggleRef","MenuToggle","ref","onClick","isExpanded","onSeveritySelect","selected","isOpen","onOpenChange","onStatusSelect","toolbarItems","ToolbarToggleGroup","toggleIcon","breakpoint","Toolbar","collapseListedFiltersBreakpoint","ToolbarContent","SUPPORT_CASE_URL","cases","setCases","useState","useChrome","isLoading","setIsLoading","sortBy","setSortBy","direction","asc","name","sort","a","b","caseNumber","localeCompare","summary","lastModifiedById","onSort","_event","sortedCases","sortFunc","useEffect","async","token","auth","getToken","user","getUser","options","method","headers","Authorization","Accept","body","JSON","stringify","createdBySSOName","identity","username","response","fetch","env","getEnvironment","json","error","console","fetchSupportCases","EmptyState","EmptyStateVariant","lg","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","Stack","StackItem","Button","iconPosition","href","window","open","compact","col","columnIndex","slice","dataLabel","component","Label","color"],"sourceRoot":""}